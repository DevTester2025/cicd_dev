swagger: "2.0"
info:
  version: 1.0.0
  title: cloudmatiq-api
  description: CloudMatiq API
basePath: /cloudmatiq
tags:
  - name: Examples
    description: Simple example endpoints

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: x-auth-header

definitions:
  $ref: "definitions.yaml"

paths:
  /users/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Base
      description: List all a users
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns parameters

  /users/create:
    post:
      tags:
        - Base
      description: Create a user
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples
  /users/update:
    post:
      tags:
        - Base
      description: Update a user
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples
  /users/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /users/login:
    post:
      tags:
        - Base
      description: User login
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples

  /users/verifyotp:
    post:
      tags:
        - Base
      description: User Verify OTP
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples

  /users/resendotp:
    post:
      tags:
        - Base
      description: Resend OTP for user
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples

  /users/forgotpassword:
    post:
      tags:
        - Base
      description: Forgot Password
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples

  /users/resetpassword:
    post:
      tags:
        - Base
      description: Reset Password
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Users"
      responses:
        200:
          description: Returns all examples

  /parameters/create:
    post:
      tags:
        - Base
      description: Create a paramters
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Parameters"
      responses:
        200:
          description: Returns parameters

  /parameters/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the parameter with the specified id
        404:
          description: Example not

  /parameters/update:
    post:
      tags:
        - Base
      description: Update a paramters
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Parameters"
      responses:
        200:
          description: Returns parameters

  /parameters/list:
    post:
      tags:
        - Base
      description: List all a parameters
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Parameters"
      responses:
        200:
          description: Returns parameters
  /customer-account/create:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Tenant
      description: Create a customers
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerAccount"
      responses:
        200:
          description: Returns customer
  /customer-account/update:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Tenant
      description: Update a customers
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerAccount"
      responses:
        200:
          description: Returns customer
  /customer-account/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Tenant
      description: List all a customers
      parameters:
        - name: tenant
          in: query
          description: number of items to skip
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerAccount"
      responses:
        200:
          description: Returns customers
  /customer-account/{id}:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the customer with the specified id
        404:
          description: Example not
  /customers/list:
    post:
      tags:
        - Tenant
      description: List all a customers
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: tenant
          in: query
          description: number of items to skip
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: Returns customers
  /customers/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the customer with the specified id
        404:
          description: Example not
  /customers/create:
    post:
      tags:
        - Tenant
      description: Create a customers
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: Returns customer
  /customers/update:
    post:
      tags:
        - Tenant
      description: Update a customers
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: Returns customer
  /customers/sla/create:
    post:
      tags:
        - Tenant
      description: Create a customers sla
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: Returns customer
  /scripts/create:
    post:
      tags:
        - Tenant
      description: Create a scripts
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Script file to upload
        - in: formData
          name: formData
          type: string
          required: false
          description: Script data
          schema:
            $ref: "#/definitions/Scripts"
      responses:
        200:
          description: Returns created script data
  /scripts/update:
    post:
      tags:
        - Tenant
      description: Update a solutions
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Script file to upload
        - in: formData
          name: formData
          type: string
          required: false
          description: Script data
          schema:
            $ref: "#/definitions/Scripts"
      responses:
        200:
          description: Returns updated data
  /scripts/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the script with the specified id
        404:
          description: No data found

  /scripts/list:
    post:
      tags:
        - Tenant
      description: List all a scripts
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Scripts"
      responses:
        200:
          description: Returns scripts
  /cloudasset/create:
    post:
      tags:
        - Tenant
      description: Create a Asset
      parameters:
        - name: body
          in: body
          description: create Tenant asset
          required: true
          schema:
            $ref: "#/definitions/CloudAssets"
      responses:
        200:
          description: Create a cloud asset

  /cloudasset/update:
    post:
      tags:
        - Tenant
      description: Update a Asset
      parameters:
        - name: body
          in: body
          description: Update Tenant asset
          required: true
          schema:
            $ref: "#/definitions/CloudAssets"
      responses:
        200:
          description: Update a cloud asset
  /cloudasset/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the script with the specified id
        404:
          description: No data found

  /cloudasset/list:
    post:
      tags:
        - Tenant
      description: List all a asset
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CloudAssets"
      responses:
        200:
          description: Returns CloudAssets

  /tenants/create:
    post:
      tags:
        - Tenant
      description: Create a tenant
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Tenant Logo
        - in: formData
          name: formData
          type: string
          required: false
          description: number of items to skip
          schema:
            $ref: "#/definitions/Tenants"
      responses:
        200:
          description: Returns created tenant data

  /tenants/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the tenant with the specified id
        404:
          description: No data found

  /tenants/dashboard:
    post:
      tags:
        - Tenant
      description: List all a records
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Tenants"
      responses:
        200:
          description: Returns records
  /tenants/list:
    post:
      tags:
        - Tenant
      description: List all a tenants
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Tenants"
      responses:
        200:
          description: Returns tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: [true, false]
                  message:
                    type: string
                    description: Message.
                  data:
                    type: array
                    description: List of tenant records .
  /tenants/update:
    post:
      tags:
        - Tenant
      description: Update a Tenants
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Tenant Logo
        - in: formData
          name: formData
          type: string
          required: false
          description: number of items to skip
          schema:
            $ref: "#/definitions/Tenants"
      responses:
        200:
          description: Returns updated data
  /tenants/region/list:
    post:
      tags:
        - Tenant Region
      description: List all a tenants region
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Tenantregion"
      responses:
        200:
          description: Returns tenants region
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: [true, false]
                  message:
                    type: string
                    description: Message.
                  data:
                    type: array
                    description: List of tenant records .
  /solutions/create:
    post:
      tags:
        - Tenant
      description: Create a solution
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Solutions"
      responses:
        200:
          description: Returns created solution data

  /solutions/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the tenant with the specified id
        404:
          description: No data found

  /solutions/list:
    post:
      tags:
        - Tenant
      description: List all a tenants
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Solutions"
      responses:
        200:
          description: Returns solutions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: [true, false]
                  message:
                    type: string
                    description: Message.
                  data:
                    type: array
                    description: List of records .
  /solutions/update:
    post:
      tags:
        - Tenant
      description: Update a solutions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Solutions"
      responses:
        200:
          description: Returns updated data
  /solutions/clone:
    post:
      tags:
        - Tenant
      description: Clone a solutions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Solutions"
      responses:
        200:
          description: Returns created data
  /solutions/graph/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the tenant with the specified id
        404:
          description: No data found
  /solutions/elc2/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the tenant with the specified id
        404:
          description: No data found
  /solutions/ali/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the tenant with the specified id
        404:
          description: No data found
  /aws/ami/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AWSAMI"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/ami/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/ami/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AWSAMI"
      responses:
        200:
          description: Returns awsami

  /aws/ami/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: distinct
          in: query
          description:
          required: false
          schema:
            type: boolean
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/AWSAMI"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/insttype/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awsinsttype
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsinsttype"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/insttype/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/insttype/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsinsttype"
      responses:
        200:
          description: Returns awsinsttype

  /aws/insttype/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: costyn
          in: query
          description: number of items to skip
          type: boolean
          required: false
        - name: region
          in: query
          description: number of items to skip
          type: string
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awsinsttype"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/key/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awskeys
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awskeys"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/key/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/key/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awskeys"
      responses:
        200:
          description: Returns awsinsttype

  /aws/key/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awskeys"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/lb/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awslb
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awslb"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/lb/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/lb/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awslb"
      responses:
        200:
          description: Returns awsinsttype

  /aws/lb/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awslb"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/sg/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssecgrp"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/sg/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/sg/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssecgrp"
      responses:
        200:
          description: Returns awsinsttype

  /aws/sg/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awssecgrp"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/sgrule/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssgrules"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/sgrule/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/sgrule/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssgrules"
      responses:
        200:
          description: Returns awsinsttype

  /aws/sgrule/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awssgrules"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/sn/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssubnet"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/sn/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/sn/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssubnet"
      responses:
        200:
          description: Returns awsinsttype

  /aws/sn/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awssubnet"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/tags/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awstags"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/tags/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/tags/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awstags"
      responses:
        200:
          description: Returns awsinsttype
  /aws/tags/bulkupdate:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/awstags"
      responses:
        200:
          description: Returns awsinsttype
  /aws/tags/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awstags"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/volumes/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsvolumes"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/volumes/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: plantype
          in: query
          required: false
          descrription:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/volumes/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsvolumes"
      responses:
        200:
          description: Returns awsinsttype
  /aws/volumes/bulkupdate:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/awsvolumes"
      responses:
        200:
          description: Returns awsinsttype
  /aws/volumes/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awsvolumes"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/vpc/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsvpc"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/vpc/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/vpc/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awsami
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsvpc"
      responses:
        200:
          description: Returns awsinsttype

  /aws/vpc/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awsvpc"
      responses:
        200:
          description: Returns AWS AMI list

  /aws/zone/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a awssecgrp
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awszone"
      responses:
        200:
          description: Returns AWS AMI data

  /aws/zone/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS AMI with the specified id
        404:
          description: No record Found

  /aws/zone/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a awszone
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awszone"
      responses:
        200:
          description: Returns awszone

  /aws/zone/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS AMI
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awszone"
      responses:
        200:
          description: Returns AWS AMI list

  /notifications/create:
    post:
      tags:
        - Base
      description: Create a notification
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notifications"
      responses:
        200:
          description: Returns data

  /notifications/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /synthetics/updatetxn/{id}:
    post:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notifications"
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /notifications/asset/{assetid}:
    get:
      tags:
        - Base
      parameters:
        - name: assetid
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /notifications/update:
    post:
      tags:
        - Base
      description: Update a notifications
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notifications"
      responses:
        200:
          description: Returns awszone

  /notifications/list:
    post:
      tags:
        - Base
      description: List all Notifications
      parameters:
        - name: limit
          in: query
          description: limit
          required: false

        - name: offset
          in: query
          description: offset
          required: false

        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notifications"
      responses:
        200:
          description: Returns Notifications list

  /notificationsetup/create:
    post:
      tags:
        - Base
      description: Create a notificationsetup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notificationsetup"
      responses:
        200:
          description: Returns data

  /notificationsetup/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /notificationsetup/update:
    post:
      tags:
        - Base
      description: Update a notificationsetup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notificationsetup"
      responses:
        200:
          description: Returns awszone

  /notificationsetup/list:
    post:
      tags:
        - Base
      description: List all notificationsetup
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/notificationsetup"
      responses:
        200:
          description: Returns notificationsetup list

  /tags/create:
    post:
      tags:
        - Base
      description: Create a tag
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Returns data

  /tags/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /tags/update:
    post:
      tags:
        - Base
      description: Update a Tag
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Returns awszone

  /tags/list:
    post:
      tags:
        - Base
      description: List all Tags
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Returns Tags list
  /taggroup/create:
    post:
      tags:
        - Base
      description: Create a tag group
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagGroup"
      responses:
        200:
          description: Returns data

  /taggroup/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /taggroup/update:
    post:
      tags:
        - Base
      description: Update a taggroup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagGroup"
      responses:
        200:
          description: Returns tag group

  /taggroup/list:
    post:
      tags:
        - Base
      description: List all tag group
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/TagGroup"
      responses:
        200:
          description: Returns Tags list

  /tagvalues/create:
    post:
      tags:
        - Base
      description: Create a Tag Value
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns data

  /tagvalues/bulkcreate:
    post:
      tags:
        - Base
      description: Create a Tag Values
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns data

  /tagvalues/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /tagvalues/update:
    post:
      tags:
        - Base
      description: Update a Tag Values
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns tag value

  /tagvalues/bulkupdate:
    post:
      tags:
        - Base
      description: Update a Tag Values
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              type: object
      responses:
        200:
          description: Returns tag value

  /tagvalues/list:
    post:
      tags:
        - Base
      description: List all Tag Values
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns Notifications list

  /costvisual/create:
    post:
      tags:
        - Base
      description: Create a Cost Visual
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CostVisual"
      responses:
        200:
          description: Returns data

  /costvisual/bulkcreate:
    post:
      tags:
        - Base
      description: Create a Cost Visuals
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CostVisual"
      responses:
        200:
          description: Returns data

  /costvisual/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /costvisual/update:
    post:
      tags:
        - Base
      description: Update a Cost Visual
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CostVisual"
      responses:
        200:
          description: Returns cost visual

  /costvisual/bulkupdate:
    post:
      tags:
        - Base
      description: Update a Cost Visual
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CostVisual"
      responses:
        200:
          description: Returns cost visual

  /costvisual/list:
    post:
      tags:
        - Base
      description: List all Cost Visuals
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/CostVisual"
      responses:
        200:
          description: Returns Notifications list

  /costvisual/estimate:
    post:
      tags:
        - Base
      description: Cost Estimation
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              cloudprovider:
                type: string
                description: cloud provider
              region:
                type: string
                description: region
              image:
                type: string
                nullable: true
                description: image
              assets:
                type: array
                items:
                  type: object
      responses:
        200:
          description: Returns data

  /deployments/create:
    post:
      tags:
        - Deployments
      description: Create a deployments
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Returns data

  /deployments/{id}:
    get:
      tags:
        - Deployments
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /deployments/update:
    post:
      tags:
        - Deployments
      description: Update a deployments
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Returns deployments

  /deployments/list:
    post:
      tags:
        - Deployments
      description: List all deployments
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Returns deployments list

  /deployments/deploy:
    post:
      tags:
        - Deployments
      description: Deploy Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Deployed solution details
  /deployments/ecl2/deploy:
    post:
      tags:
        - Deployments
      description: Deploy ECL2 Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Deployed ecl2 solution details
  /assets/resync:
    post:
      tags:
        - Deployments
      description: Deploy ECL2 Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: Deployed ecl2 solution details
  /deployments/ali/deploy:
    post:
      tags:
        - Deployments
      description: Deploy Alibaba Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Deployed alibaba solution details
  /deployments/ecl2/update:
    post:
      tags:
        - Deployments
      description: Update ECL2 Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Updated ecl2 solution details
  /deployments/ecl2/delete:
    post:
      tags:
        - Deployments
      description: Delete ECL2 Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Deleted ecl2 solution details
  /deployments/ecl2/vncconsole:
    post:
      tags:
        - Deployments
      description: Get ECL2 VNC Console
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Get ECL2 VNC Console
  /deployments/ecl2/vsrx:
    post:
      tags:
        - Deployments
      description: Create ECL2 vsrx api
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Create ECL2 vsrx api
  /deployments/ecl2/netscaler:
    post:
      tags:
        - Deployments
      description: Create ECL2 netscaler api
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Create ECL2 netscaler api
  /deployments/ecl2/resize:
    post:
      tags:
        - Deployments
      description: Resize ECL2 Instance
      parameters:
        - name: body
          in: body
          description: get based on filters
          required: false
          schema:
            type: array
            items:
              type: object
      responses:
        200:
          description: Create ECL2 netscaler api

  /deployments/aws/resize:
    post:
      tags:
        - AWS - Common
      description: Resize AWS Instance
      parameters:
        - name: body
          in: body
          description: get based on filters
          required: false
          schema:
            type: array
            items:
              type: object
      responses:
        200:
          description: Resize

  /deployments/log:
    post:
      tags:
        - Deployments
      description: Deploy Solution
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Deployed solution details
  /deployments/ecl2/list:
    post:
      tags:
        - Deployments
      description: List all deployments
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/deployments"
      responses:
        200:
          description: Returns deployments list
  /srm/catalog/list:
    post:
      tags:
        - Solution Request Management
      description: List all catalog
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/servicecatalog"
      responses:
        200:
          description: Returns catalog list
  /srm/catalog/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found
  /srm/catalog/create:
    post:
      tags:
        - Solution Request Management
      description: Create a Solution Catalog
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: serviceimgfile
          type: file
          description: Visual representaion for the catalog
        - in: formData
          name: olaimgfile
          type: file
          description: Visual representaion for catalog Operation Level Agreement
        - in: formData
          name: archictectureimgfile
          type: file
          description: Visual representaion of the architecture
        - in: formData
          name: formData
          type: string
          required: true
          description: Script data
          schema:
            $ref: "#/definitions/servicecatalog"
      responses:
        200:
          description: Returns Solution Catalog
  /srm/catalog/update:
    post:
      tags:
        - Solution Request Management
      description: Update a Solution Catalog
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: serviceimgfile
          type: file
          description: Visual representaion for the catalog
        - in: formData
          name: olaimgfile
          type: file
          description: Visual representaion for catalog Operation Level Agreement
        - in: formData
          name: archictectureimgfile
          type: file
          description: Visual representaion of the architecture
        - in: formData
          name: formData
          type: string
          required: true
          description: Script data
          schema:
            $ref: "#/definitions/servicecatalog"
      responses:
        200:
          description: Returns Solution Catalog
  /srm/sr/list:
    post:
      tags:
        - Solution Request Management
      description: List all service request
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/servicerequest"
      responses:
        200:
          description: Returns service request list
  /srm/sr/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /srm/sr/create:
    post:
      tags:
        - Solution Request Management
      description: Create a Service Request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/servicerequest"
      responses:
        200:
          description: Returns Service Request
  /srm/sr/update:
    post:
      tags:
        - Solution Request Management
      description: Update a Service Request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/servicerequest"
      responses:
        200:
          description: Returns Service Request
  /srm/sr/count:
    post:
      tags:
        - Solution Request Management
      description: List all service request
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/servicerequest"
      responses:
        200:
          description: Returns service request list
  /srm/sractions/list:
    post:
      tags:
        - Solution Request Management
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/servicerequestactions"
      responses:
        200:
          description: Returns service request actions list
  /srm/sractions/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /srm/sractions/create:
    post:
      tags:
        - Solution Request Management
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/servicerequestactions"
      responses:
        200:
          description: Returns Service Request
  /srm/sractions/update:
    post:
      tags:
        - Solution Request Management
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/servicerequestactions"
      responses:
        200:
          description: Returns Service Request Actions
  /tenants/sla/list:
    post:
      tags:
        - Tenant
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/SLA"
      responses:
        200:
          description: Returns service request actions list
  /tenants/sla/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/sla/create:
    post:
      tags:
        - Tenant
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/SLA"
      responses:
        200:
          description: Returns Service Request
  /tenants/sla/update:
    post:
      tags:
        - Tenant
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/SLA"
      responses:
        200:
          description: Returns Service Request Actions

  /tenants/assetmapping/list:
    post:
      tags:
        - Tenant
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/AssetMapping"
      responses:
        200:
          description: Returns service request actions list
  /tenants/assetmapping/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/assetmapping/bulkcreate:
    post:
      tags:
        - Tenant
      description: Create a asset mapping
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AssetMapping"
      responses:
        200:
          description: Returns Service Request
  /tenants/assetmapping/create:
    post:
      tags:
        - Tenant
      description: Create a asset mapping
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AssetMapping"
      responses:
        200:
          description: Returns Service Request
  /tenants/assetmapping/update:
    post:
      tags:
        - Tenant
      description: Update a asset mapping
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AssetMapping"
      responses:
        200:
          description: Returns Service Request Actions
  /tenants/assetmapping/bulkupdate:
    post:
      tags:
        - Tenant
      description: Update a asset mappings
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/AssetMapping"
      responses:
        200:
          description: Returns asset mappings

  /tenants/exptrmapping/list:
    post:
      tags:
        - Tenant
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/ExptrMapping"
      responses:
        200:
          description: Returns exporter mapping actions list
  /tenants/exptrmapping/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/exptrmapping/create:
    post:
      tags:
        - Tenant
      description: Create a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ExptrMapping"
      responses:
        200:
          description: Returns exporter mapping
  /tenants/exptrmapping/update:
    post:
      tags:
        - Tenant
      description: Update a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ExptrMapping"
      responses:
        200:
          description: Returns exporter mapping Actions

  /tenants/exptrorchmap/list:
    post:
      tags:
        - Tenant
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/ExptrOrchMapping"
      responses:
        200:
          description: Returns exporter mapping actions list
  /tenants/exptrorchmap/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/exptrorchmap/create:
    post:
      tags:
        - Tenant
      description: Create a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ExptrOrchMapping"
      responses:
        200:
          description: Returns exporter mapping
  /tenants/exptrorchmap/update:
    post:
      tags:
        - Tenant
      description: Update a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ExptrOrchMapping"
      responses:
        200:
          description: Returns exporter mapping Actions

  /deploymentscript/list:
    post:
      tags:
        - Tenant
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/DeploymentScript"
      responses:
        200:
          description: Returns service request actions list
  /deploymentscript/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /deploymentscript/create:
    post:
      tags:
        - Tenant
      description: Create a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/DeploymentScript"
      responses:
        200:
          description: Returns Service Request
  /deploymentscript/update:
    post:
      tags:
        - Tenant
      description: Update a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/DeploymentScript"
      responses:
        200:
          description: Returns Service Request Actions
  /deploymentscript/bulkupdate:
    post:
      tags:
        - Tenant
      description: Update a deployment script
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/DeploymentScript"
      responses:
        200:
          description: Returns all deployment script

  /base/assets/count:
    get:
      tags:
        - Base
      description: List all service request actions
      parameters:
        - name: tenantid
          in: query
          description:
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Returns assets count
  /base/assets/totalcost:
    get:
      tags:
        - Base
      description: Get total cost of assets by asset type
      parameters:
        - name: tenantid
          in: query
          description:
          required: true
          schema:
          type: integer
        - name: cloudprovider
          in: query
          description:
          required: false
          schema:
          type: string
      responses:
        200:
          description: Returns assets count
  /base/assets/instances:
    post:
      tags:
        - Base
      description: Get monitoring instances
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              instancerefid:
                type: string
                description: Instance Reference ID
              utilkey:
                type: string
                description: Utilization Key
              utiltype:
                type: string
                description: Utilization Type
      responses:
        200:
          description: Returns assets count
  /base/assets/filterby:
    post:
      tags:
        - Base
      description: List all service request actions
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: Offset
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              searchText:
                type: string
                description: The example name
              headers:
                type: array
                items:
                  type: object
              order:
                type: array
                items:
                  type: string
              provider:
                type: string
                description: The example name
              asset:
                type: string
                description: The example name
              datacollection:
                type: string
                description: The example name
              tagid:
                type: number
                nullable: true
                description: The example name
              tagvalue:
                type: string
                nullable: true
                description: The example name
              customers:
                type: array
                items:
                  type: number
              data:
                type: object
                properties:
                  tenantid: number
      responses:
        200:
          description: Returns service request actions list
  /base/lookup/list:
    post:
      tags:
        - Base
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/LookUp"
      responses:
        200:
          description: Returns service request actions list
  /base/lookup/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /base/lookup/create:
    post:
      tags:
        - Base
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/LookUp"
      responses:
        200:
          description: Returns Service Request
  /base/lookup/update:
    post:
      tags:
        - Base
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/LookUp"
      responses:
        200:
          description: Returns Service Request Actions

  /base/assetrecords/update:
    post:
      tags:
        - Asset Records
      description: Update a Asset Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assethdr"
      responses:
        200:
          description: Returns Service Request Actions
  /base/assetrecords/bulkupdate:
    post:
      tags:
        - Asset Records
      description: Bulk Update a Asset Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assethdr"
      responses:
        200:
          description: Returns Asset Records
  /base/assetrecords/chart:
    post:
      tags:
        - Asset Records
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns service request actions list
  /base/assetrecords/resourcedetails/list:
    post:
      tags:
        - Asset Records
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns service request actions list
  /base/assetrecords/resourcedetails/update:
    post:
      tags:
        - Asset Records
      description: Update a Asset detail Records
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns Service Request Actions

  /base/assetrecords/resourcedetails/create:
    post:
      tags:
        - Asset Records
      description: Create a Asset Detail Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns Asset Records

  /base/assetrecords/resourcedetails/bulkcreate:
    post:
      tags:
        - Asset Records
      description: Create a Asset Detail Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns Asset Records
  /base/assetrecords/resourcedetails/copy:
    post:
      tags:
        - Copy Asset Records
      description: Copy a Asset Detail Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns Asset Records
  /base/assetrecords/resourcedetails/bulkupdate:
    post:
      tags:
        - Asset Records
      description: Create a Asset Detail Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns Asset Records

  /base/assetrecords/documents/list:
    post:
      tags:
        - Asset Records
      description: List all documents
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns service request actions list
  /base/assetrecords/documents/download:
    post:
      tags:
        - Asset Records
      description: download
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns service request actions list

  /base/assetrecords/documents/create:
    post:
      tags:
        - Asset Records
      description: Create a Asset documents
      consumes:
        - multipart/form-data
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        200:
          description: Returns Asset documents
  /base/assetrecords/documents/delete:
    post:
      tags:
        - Asset Records
      description: Delete a asset document
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetdtl"
      responses:
        200:
          description: Returns service request actions list

  /base/assetrecords/comments/list:
    post:
      tags:
        - Asset Records
      description: List all Asset Records comments actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetcomments"
      responses:
        200:
          description: Returns Asset Records comments list

  /base/assetrecords/comments/create:
    post:
      tags:
        - Asset Records
      description: Create a Asset Comments
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/assetcomments"
      responses:
        200:
          description: Returns Asset Comments

  /base/assetrecords/comments/update:
    post:
      tags:
        - Asset Records
      description: Update a Asset comments
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/assetcomments"
      responses:
        200:
          description: Returns Updated a Asset comments

  /base/assetrecords/history/list:
    post:
      tags:
        - Asset Records
      description: List all history
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assethistory"
      responses:
        200:
          description: Returns Asset history Records

  /base/assetrecords/create:
    post:
      tags:
        - Asset Records
      description: Create a Asset Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assethdr"
      responses:
        200:
          description: Returns Asset Records

  /base/assetrecords/list:
    post:
      tags:
        - Asset Records
      description: Get all resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              resourcetype:
                type: string
                description: resource type
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/query/list:
    post:
      tags:
        - Asset Records
      description: List all history
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/assetquery"
      responses:
        200:
          description: Returns Asset history Records

  /base/assetrecords/query/create:
    post:
      tags:
        - Asset Records
      description: Create a Asset Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetquery"
      responses:
        200:
          description: Returns Asset Records

  /base/assetrecords/query/update:
    post:
      tags:
        - Asset Records
      description: Create a Asset Records
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/assetquery"
      responses:
        200:
          description: Returns Asset Records

  /base/assetrecords/query/{id}:
    get:
      tags:
        - Asset Records
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found

  /base/assetrecords/query/report:
    post:
      tags:
        - Asset Records
      description: Get all resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/resourcetype:
    post:
      tags:
        - Asset Records
      description: Get all resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns CloudAssets
  /base/assetrecords/builder:
    post:
      tags:
        - Asset Records
      description: Get all resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/resources/{type}:
    post:
      tags:
        - Asset Records
      description: Get all fields of resource type
      parameters:
        - name: type
          in: path
          required: true
          description: The type of the entity to retrieve
          type: string
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/resource/{id}:
    get:
      tags:
        - Asset Records
      description: Get asset details by resource id
      parameters:
        - name: id
          in: path
          required: true
          description: Resrource id
          type: string
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/resource/fieldvalues:
    post:
      tags:
        - Asset Records
      security:
        - ApiKeyAuth: []
      description: Get all distinct values for the respective fieldkeys
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              fieldkey:
                type: string
                description: Fieldkey
              search:
                type: string
                description: Search
      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/resourcedetails:
    post:
      tags:
        - Asset Records
      description: Get all fields of resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              crn:
                type: string
                description: CRN of the resource
              tag:
                type: number
                description: Tag ID
              tagvalue:
                type: string
                description: Tag value
              infieldvalues:
                type: array
                items:
                  type: string
              filters:
                type: object
              limit:
                type: number
              offset:
                type: number

      responses:
        200:
          description: Returns CloudAssets

  /base/assetrecords/filter:
    post:
      tags:
        - Asset Records
      security:
        - ApiKeyAuth: []
      description: Get all fields of resource type
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID

      responses:
        200:
          description: Returns CloudAssets

  /base/wazuh/getdata:
    post:
      tags:
        - Wazuh
      security:
        - ApiKeyAuth: []
      description: Get all fields
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns Wazuh data

  /base/wazuh/authenticate:
    post:
      tags:
        - Wazuh
      security:
        - ApiKeyAuth: []
      description: Get Token
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns Wazuh data

  /base/wazuh/file/{key}:
    get:
      tags:
        - AWS - Common
      description: Download S3 file
      parameters:
        - name: key
          in: path
          required: true
          description: Get a filename
          type: string
      responses:
        200:
          description: Returns all tagvlaues

  /base/wazuh/getagent:
    post:
      tags:
        - Wazuh
      security:
        - ApiKeyAuth: []
      description: Get all fields
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns Wazuh data

  /base/wazuh/updatewazuhagent:
    post:
      tags:
        - Wazuh
      security:
        - ApiKeyAuth: []
      description: Get all fields
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns Wazuh data

  /aws/deployed/volumes/list:
    post:
      tags:
        - Deployment-AWS
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awsdeploymentvolumes"
      responses:
        200:
          description: Returns service request actions list
  /aws/deployed/volumes/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /aws/deployed/volumes/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsdeploymentvolumes"
      responses:
        200:
          description: Returns Service Request
  /aws/deployed/volumes/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsdeploymentvolumes"
      responses:
        200:
          description: Returns Service Request Actions
  /aws/solution/list:
    post:
      tags:
        - Deployment-AWS
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awssolution"
      responses:
        200:
          description: Returns service request actions list
  /aws/solution/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /aws/solution/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssolution"
      responses:
        200:
          description: Returns Service Request
  /aws/solution/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awssolution"
      responses:
        200:
          description: Returns Service Request Actions
  /aws/solution/bulkupdate:
    post:
      tags:
        - Deployment-AWS
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/awssolution"
      responses:
        200:
          description: Returns awsinsttype
  /users/role/create:
    post:
      tags:
        - Base
      description: Create a user roles
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/UserRoles"
      responses:
        200:
          description: Returns all examples
  /users/role/update:
    post:
      tags:
        - Base
      description: Create a user roles
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/UserRoles"
      responses:
        200:
          description: Returns all examples
  /users/role/list:
    post:
      tags:
        - Base
      description: List all a user roles
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/UserRoles"
      responses:
        200:
          description: Returns parameters
  /users/role/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /aws/deployments/list:
    post:
      tags:
        - Deployment-AWS
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/awsdeployments"
      responses:
        200:
          description: Returns service request actions list
  /aws/deployments/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a aws deployment
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsdeployments"
      responses:
        200:
          description: Returns all examples
  /aws/deployments/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a aws deployment
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsdeployments"
      responses:
        200:
          description: Returns all examples
  /aws/deployments/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /screens/create:
    post:
      tags:
        - Base
      description: Create a screens
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Screens"
      responses:
        200:
          description: Returns all examples
  /screens/update:
    post:
      tags:
        - Base
      description: Create a user screens
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Screens"
      responses:
        200:
          description: Returns all examples
  /screens/list:
    post:
      tags:
        - Base
      description: List all a user screens
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Screens"
      responses:
        200:
          description: Returns parameters
  /screens/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /screens/actions/create:
    post:
      tags:
        - Base
      description: Create a screen actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ScreenActions"
      responses:
        200:
          description: Returns all examples
  /screens/actions/update:
    post:
      tags:
        - Base
      description: Create a screen actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ScreenActions"
      responses:
        200:
          description: Returns all examples
  /screens/actions/list:
    post:
      tags:
        - Base
      description: List all a screen actions
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ScreenActions"
      responses:
        200:
          description: Returns parameters
  /screens/actions/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /role/access/create:
    post:
      tags:
        - Base
      description: Create a role access
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/RoleAccess"
      responses:
        200:
          description: Returns all examples
  /role/access/update:
    post:
      tags:
        - Base
      description: Create a role access
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/RoleAccess"
      responses:
        200:
          description: Returns all examples
  /role/access/list:
    post:
      tags:
        - Base
      description: List all a role access
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/RoleAccess"
      responses:
        200:
          description: Returns parameters
  /role/access/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /aws/costvisual/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS Cost Visual
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/awscostvisual"
      responses:
        200:
          description: Returns AWS Cost Visual list

  /ecl2/firewall/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a firewall
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewalls"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewall/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update firewall
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewalls"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewall/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all firewalls
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewalls"
      responses:
        200:
          description: Returns parameters
  /ecl2/firewall/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/firewall/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete firewall
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewalls"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2internetgateways"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2internetgateways"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all gateway
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2internetgateways"
      responses:
        200:
          description: Returns parameters
  /ecl2/gateway/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/gateway/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2internetgateways"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a network
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update network
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/createconnreq:
    post:
      tags:
        - Deploymets-ECL2
      description: Tenant Connection Request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/connections:
    post:
      tags:
        - Deploymets-ECL2
      description: Tenant Connections
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/updateconnreq:
    post:
      tags:
        - Deploymets-ECL2
      description: Update tenant connection request status
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/deleteconnreq:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete tenant connection request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns updated ecl2networks object
  /ecl2/network/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete network
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns all examples
  /ecl2/network/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all network
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2networks"
      responses:
        200:
          description: Returns parameters
  /ecl2/network/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/port/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a port
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2ports"
      responses:
        200:
          description: Returns all examples
  /ecl2/port/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update port
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2ports"
  /ecl2/port/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete port
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2ports"
      responses:
        200:
          description: Returns all examples
  /ecl2/port/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all port
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2ports"
      responses:
        200:
          description: Returns parameters
  /ecl2/port/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/subnet/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a subnet
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2subnets"
      responses:
        200:
          description: Returns all examples
  /ecl2/subnet/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update subnet
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2subnets"
      responses:
        200:
          description: Returns all examples
  /ecl2/subnet/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete subnet
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2subnets"
      responses:
        200:
          description: Returns all examples
  /ecl2/subnet/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all subnet
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2subnets"
      responses:
        200:
          description: Returns parameters
  /ecl2/subnet/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/loadbalancer/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a loadbalancer
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2loadbalancers"
      responses:
        200:
          description: Returns all examples
  /ecl2/loadbalancer/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update loadbalancer
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2loadbalancers"
      responses:
        200:
          description: Returns all examples
  /ecl2/loadbalancer/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete loadbalancer
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2loadbalancers"
      responses:
        200:
          description: Returns all examples
  /ecl2/loadbalancer/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all loadbalancer
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2loadbalancers"
      responses:
        200:
          description: Returns parameters
  /ecl2/loadbalancer/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/tags/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a tags
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tags"
      responses:
        200:
          description: Returns all examples
  /ecl2/tags/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update tags
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tags"
      responses:
        200:
          description: Returns all examples
  /ecl2/tags/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all tags
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tags"
      responses:
        200:
          description: Returns parameters
  /ecl2/tags/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/solution/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a solution
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2solutions"
      responses:
        200:
          description: Returns all examples
  /ecl2/solution/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update solution
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2solutions"
      responses:
        200:
          description: Returns all examples
  /ecl2/solution/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all solution
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2solutions"
      responses:
        200:
          description: Returns parameters
  /ecl2/solution/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/solution/createconnreq:
    post:
      tags:
        - Deploymets-ECL2
      description: Tenant Connection Request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2solutions"
      responses:
        200:
          description: Returns all examples
  /ecl2/image/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a image
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2images"
      responses:
        200:
          description: Returns all examples
  /ecl2/image/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update image
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2images"
      responses:
        200:
          description: Returns all examples
  /ecl2/image/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all image
      parameters:
        - name: distinct
          in: query
          description:
          required: false
          schema:
            type: boolean
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2images"
      responses:
        200:
          description: Returns parameters
  /ecl2/image/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/instancetype/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a instancetype
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2instancetype"
      responses:
        200:
          description: Returns all examples
  /ecl2/instancetype/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update instancetype
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2instancetype"
      responses:
        200:
          description: Returns all examples
  /ecl2/instancetype/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all image
      parameters:
        - name: costyn
          in: query
          description: number of items to skip
          type: boolean
          required: false
        - name: region
          in: query
          description: number of items to skip
          type: string
          required: false
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2instancetype"
      responses:
        200:
          description: Returns parameters
  /ecl2/instancetype/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/zone/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a Zone
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2zones"
      responses:
        200:
          description: Returns all examples
  /ecl2/zone/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update Zone
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2zones"
      responses:
        200:
          description: Returns all examples
  /ecl2/zone/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all Zone
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2zones"
      responses:
        200:
          description: Returns parameters
  /ecl2/zone/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/volume/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a Volume
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2volumes"
      responses:
        200:
          description: Returns all examples
  /ecl2/volume/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update Volume
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2volumes"
      responses:
        200:
          description: Returns all examples
  /ecl2/volume/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all Volume
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2volumes"
      responses:
        200:
          description: Returns parameters
  /ecl2/volume/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
        - name: asstdtls
          in: query
          required: false
          description: The id of the entity to retrieve
          type: boolean
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/key/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a key
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2keys"
      responses:
        200:
          description: Returns all examples
  /ecl2/key/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update key
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2keys"
      responses:
        200:
          description: Returns all examples
  /ecl2/key/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all key
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2keys"
      responses:
        200:
          description: Returns parameters
  /ecl2/key/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/firewallplans/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a Firewall plan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/firewallplans"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewallplans/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update firewallplans
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/firewallplans"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewallplans/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all firewallplans
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/firewallplans"
      responses:
        200:
          description: Returns parameters
  /ecl2/firewallplans/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/internetservices/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a internetservices
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/internetservices"
      responses:
        200:
          description: Returns all examples
  /ecl2/internetservices/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update internetservices
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/internetservices"
      responses:
        200:
          description: Returns all examples
  /ecl2/internetservices/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all internetservices
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/internetservices"
      responses:
        200:
          description: Returns parameters
  /ecl2/internetservices/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not

  /ecl2/qosoptions/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a qosoptions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/qosoptions"
      responses:
        200:
          description: Returns all examples
  /ecl2/qosoptions/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update qosoptions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/qosoptions"
      responses:
        200:
          description: Returns all examples
  /ecl2/qosoptions/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all qosoptions
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/qosoptions"
      responses:
        200:
          description: Returns parameters
  /ecl2/qosoptions/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/gateway/interface/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a gateway interface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2iginterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/interface/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update gateway interface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2iginterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/interface/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all gateway interface
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2iginterface"
      responses:
        200:
          description: Returns parameters
  /ecl2/gateway/interface/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/gateway/interface/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete gateway interface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2iginterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/globalip/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a gateway globalip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igglobalip"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/globalip/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update gateway globalip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igglobalip"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/globalip/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all gateway globalip
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igglobalip"
      responses:
        200:
          description: Returns parameters
  /ecl2/gateway/globalip/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/gateway/globalip/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete gateway globalip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igglobalip"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/staticip/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a gateway staticip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igstaticip"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/staticip/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update gateway staticip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igstaticip"
      responses:
        200:
          description: Returns all examples
  /ecl2/gateway/staticip/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all gateway staticip
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igstaticip"
      responses:
        200:
          description: Returns parameters
  /ecl2/gateway/staticip/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/gateway/staticip/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete gateway staticip
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2igstaticip"
      responses:
        200:
          description: Returns all examples

  /ecl2/commonfunctiongateway/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a common function gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctiongateway"
      responses:
        200:
          description: Returns all examples
  /ecl2/commonfunctiongateway/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update common function gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctiongateway"
      responses:
        200:
          description: Returns all examples
  /ecl2/commonfunctiongateway/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all common function gateways
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctiongateway"
      responses:
        200:
          description: Returns parameters
  /ecl2/commonfunctiongateway/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a common function gateway
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/commonfunctiongateway/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete common function gateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctiongateway"
      responses:
        200:
          description: Returns all examples

  /ecl2/commonfunctionpool/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a common function pool
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctionpool"
      responses:
        200:
          description: Returns all examples
  /ecl2/commonfunctionpool/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update common function pool
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctionpool"
      responses:
        200:
          description: Returns all examples
  /ecl2/commonfunctionpool/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all common function pool
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctionpool"
      responses:
        200:
          description: Returns parameters
  /ecl2/commonfunctionpool/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a common function pool
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/commonfunctionpool/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete common function pool
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2commonfunctionpool"
      responses:
        200:
          description: Returns all examples

  /ecl2/vsrx/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a vsrx
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrx"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrx/rpc:
    post:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrx"
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/vsrx/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update vsrx
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrx"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrx/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all vsrx
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrx"
      responses:
        200:
          description: Returns parameters
  /ecl2/vsrx/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a vsrx
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/vsrx/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete vsrx
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrx"
      responses:
        200:
          description: Returns all examples

  /ecl2/vsrxplan/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a vsrxplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxplan"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrxplan/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update vsrxplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxplan"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrxplan/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all vsrxplans
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxplan"
      responses:
        200:
          description: Returns parameters
  /ecl2/vsrxplan/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a vsrxplan
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/vsrxplan/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete vsrxplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxplan"
      responses:
        200:
          description: Returns all examples

  /ecl2/common/synchronization:
    post:
      tags:
        - ECL2 - Common
      description: ECL2 Data Synchronization
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2zones"
      responses:
        200:
          description: Returns all examples

  /aws/common/synchronization:
    post:
      tags:
        - AWS - Common
      description: AWS Data Synchronization
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awszone"
      responses:
        200:
          description: Returns all examples

  /aws/common/syncprice:
    post:
      tags:
        - AWS - Common
      description: AWS Pull Pricing
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              region:
                type: string
                description: Region
      responses:
        200:
          description: Returns all examples

  /ecl2/common/metadata:
    post:
      tags:
        - ECL2 - Common
      description: ECL2 Data metadata
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns all tagvlaues

  /aws/common/metadata:
    post:
      tags:
        - AWS - Common
      description: ECL2 Data metadata
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns all tagvlaues

  /aws/common/synctags:
    post:
      tags:
        - AWS - Common
      description: AWS - get instance tags
      parameters:
        - name: body
          in: body
          description: parameters for getting tags
          required: true
          schema:
            $ref: "#/definitions/TagValues"
      responses:
        200:
          description: Returns all tagvlaues

  /aws/common/downloadfile/{key}:
    get:
      tags:
        - AWS - Common
      description: Download S3 file
      parameters:
        - name: key
          in: path
          required: true
          description: Get a filename
          type: string
      responses:
        200:
          description: Returns all tagvlaues

  /ecl2/lbplan/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a lbplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbplan"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbplan/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update lbplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbplan"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbplan/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all lbplan
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbplan"
      responses:
        200:
          description: Returns parameters
  /ecl2/lbplan/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a lbplan
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/lbplan/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete lbplan
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbplan"
      responses:
        200:
          description: Returns all examples

  /ecl2/firewallinterface/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a firewallinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewallinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewallinterface/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update firewallinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewallinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/firewallinterface/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all firewallinterface
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewallinterface"
      responses:
        200:
          description: Returns parameters
  /ecl2/firewallinterface/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a firewallinterface
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/firewallinterface/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete firewallinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2firewallinterface"
      responses:
        200:
          description: Returns all examples

  /ecl2/lbinterface/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a lbinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbinterface/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update lbinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbinterface/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all lbinterface
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbinterface"
      responses:
        200:
          description: Returns parameters
  /ecl2/lbinterface/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a lbinterface
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/lbinterface/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete lbinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbinterface"
      responses:
        200:
          description: Returns all examples

  /ecl2/lbsyslogserver/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a lbsyslogserver
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsyslogserver"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbsyslogserver/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update lbsyslogserver
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsyslogserver"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbsyslogserver/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all lbsyslogserver
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsyslogserver"
      responses:
        200:
          description: Returns parameters
  /ecl2/lbsyslogserver/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a lbsyslogserver
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/lbsyslogserver/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete lbsyslogserver
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsyslogserver"
      responses:
        200:
          description: Returns all examples

  /ecl2/vsrxinterface/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a vsrxinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrxinterface/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update vsrxinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxinterface"
      responses:
        200:
          description: Returns all examples
  /ecl2/vsrxinterface/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all vsrxinterface
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxinterface"
      responses:
        200:
          description: Returns parameters
  /ecl2/vsrxinterface/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a vsrxinterface
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/vsrxinterface/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete vsrxinterface
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2vsrxinterface"
      responses:
        200:
          description: Returns all examples

  /ecl2/lbsettings/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a lbsettings
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsettings"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbsettings/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update lbsettings
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsettings"
      responses:
        200:
          description: Returns all examples
  /ecl2/lbsettings/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all lbsettings
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsettings"
      responses:
        200:
          description: Returns parameters
  /ecl2/lbsettings/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a lbsettings
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/lbsettings/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete lbsettings
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2lbsettings"
      responses:
        200:
          description: Returns all examples

  /ecl2/tenantconnrequest/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a Tenantconnrequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnrequest"
      responses:
        200:
          description: Returns all examples
  /ecl2/tenantconnrequest/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update etenantconnrequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnrequest"
      responses:
        200:
          description: Returns all examples
  /ecl2/tenantconnrequest/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all tenantconnrequest
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnrequest"
      responses:
        200:
          description: Returns parameters
  /ecl2/tenantconnrequest/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a tenantconnrequest
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/tenantconnrequest/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete tenantconnrequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnrequest"
      responses:
        200:
          description: Returns all examples

  /ecl2/tenantconnection/create:
    post:
      tags:
        - Deploymets-ECL2
      description: Create a tenantconnection
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnection"
      responses:
        200:
          description: Returns all examples
  /ecl2/tenantconnection/update:
    post:
      tags:
        - Deploymets-ECL2
      description: Update tenantconnrequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnection"
      responses:
        200:
          description: Returns all examples
  /ecl2/tenantconnection/list:
    post:
      tags:
        - Deploymets-ECL2
      description: List all tenantconnection
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnection"
      responses:
        200:
          description: Returns parameters
  /ecl2/tenantconnection/{id}:
    get:
      tags:
        - Deploymets-ECL2
      parameters:
        - name: id
          in: path
          required: true
          description: Get a tenantconnection
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ecl2/tenantconnection/delete:
    post:
      tags:
        - Deploymets-ECL2
      description: Delete tenantconnrequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ecl2tenantconnection"
      responses:
        200:
          description: Returns all examples
  /ali/deployment/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA deployment
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alideployment"
      responses:
        200:
          description: Returns all examples
  /ali/deployment/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA deployment
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alideployment"
      responses:
        200:
          description: Returns all examples
  /ali/deployment/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all deployment
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alideployment"
      responses:
        200:
          description: Returns parameters
  /ali/deployment/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a deployment
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/image/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA image
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliimage"
      responses:
        200:
          description: Returns all examples
  /ali/image/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA image
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliimage"
      responses:
        200:
          description: Returns all examples
  /ali/image/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all images
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliimage"
      responses:
        200:
          description: Returns parameters
  /ali/image/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a image
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/instancetype/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA instancetype
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliinstancetype"
      responses:
        200:
          description: Returns all examples
  /ali/instancetype/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA instancetype
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliinstancetype"
      responses:
        200:
          description: Returns all examples
  /ali/instancetype/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all instancetypes
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/aliinstancetype"
      responses:
        200:
          description: Returns parameters
  /ali/instancetype/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a instancetype
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/key/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA key
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alikeypairs"
      responses:
        200:
          description: Returns all examples
  /ali/key/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA key
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alikeypairs"
      responses:
        200:
          description: Returns all examples
  /ali/key/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all key
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alikeypairs"
      responses:
        200:
          description: Returns parameters
  /ali/key/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a key
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/loadbalancer/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA loadbalancer
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilb"
      responses:
        200:
          description: Returns all examples
  /ali/loadbalancer/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA loadbalancer
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilb"
      responses:
        200:
          description: Returns all examples
  /ali/loadbalancer/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all loadbalancer
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilb"
      responses:
        200:
          description: Returns parameters
  /ali/loadbalancer/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a loadbalancer
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/lblistener/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA lblistener
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilblistener"
      responses:
        200:
          description: Returns all examples
  /ali/lblistener/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA lblistener
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilblistener"
      responses:
        200:
          description: Returns all examples
  /ali/lblistener/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all lblistener
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alilblistener"
      responses:
        200:
          description: Returns parameters
  /ali/lblistener/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a lblistener
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/securitygroup/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA securitygroup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisecuritygroup"
      responses:
        200:
          description: Returns all examples
  /ali/securitygroup/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA securitygroup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisecuritygroup"
      responses:
        200:
          description: Returns all examples
  /ali/securitygroup/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all securitygroup
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisecuritygroup"
      responses:
        200:
          description: Returns parameters
  /ali/securitygroup/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a securitygroup
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/sgrule/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA sgrule
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisgrules"
      responses:
        200:
          description: Returns all examples
  /ali/sgrule/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA sgrule
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisgrules"
      responses:
        200:
          description: Returns all examples
  /ali/sgrule/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all sgrule
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisgrules"
      responses:
        200:
          description: Returns parameters
  /ali/sgrule/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a sgrule
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/solution/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA solution
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisolution"
      responses:
        200:
          description: Returns all examples
  /ali/solution/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA solution
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisolution"
      responses:
        200:
          description: Returns all examples
  /ali/solution/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all solution
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alisolution"
      responses:
        200:
          description: Returns parameters
  /ali/solution/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a solution
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/tag/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA tag
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alitags"
      responses:
        200:
          description: Returns all examples
  /ali/tag/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA tag
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alitags"
      responses:
        200:
          description: Returns all examples
  /ali/tag/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all tag
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alitags"
      responses:
        200:
          description: Returns parameters
  /ali/tag/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a tag
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/volume/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA volume
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivolume"
      responses:
        200:
          description: Returns all examples
  /ali/volume/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA volume
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivolume"
      responses:
        200:
          description: Returns all examples
  /ali/volume/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all volume
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivolume"
      responses:
        200:
          description: Returns parameters
  /ali/volume/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a volume
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/vpc/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA vpc
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivpc"
      responses:
        200:
          description: Returns all examples
  /ali/vpc/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA vpc
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivpc"
      responses:
        200:
          description: Returns all examples
  /ali/vpc/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all vpc
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivpc"
      responses:
        200:
          description: Returns parameters
  /ali/vpc/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a vpc
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/vswitch/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA vswitch
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivswitch"
      responses:
        200:
          description: Returns all examples
  /ali/vswitch/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA vswitch
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivswitch"
      responses:
        200:
          description: Returns all examples
  /ali/vswitch/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all vswitch
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alivswitch"
      responses:
        200:
          description: Returns parameters
  /ali/vswitch/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a vswitch
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /ali/zone/create:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Create a ALIBABA zone
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alizones"
      responses:
        200:
          description: Returns all examples
  /ali/zone/update:
    post:
      tags:
        - Deploymets-ALIBABA
      description: Update ALIBABA zone
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alizones"
      responses:
        200:
          description: Returns all examples
  /ali/zone/list:
    post:
      tags:
        - Deploymets-ALIBABA
      description: List all zone
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/alizones"
      responses:
        200:
          description: Returns parameters
  /ali/zone/{id}:
    get:
      tags:
        - Deploymets-ALIBABA
      parameters:
        - name: id
          in: path
          required: true
          description: Get a zone
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not
  /nm/asstutl/daily/datacollection:
    post:
      tags:
        - Asset Utilisation
      description: Data collection
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: false
          schema:
            type: object
            properties:
              fromdate:
                type: string
                description: from date
              todate:
                type: string
                description: end date
              cloudprovider:
                type: string
                description: cloud provider
              customerid:
                type: number
                description: customer
      responses:
        200:
          description: Returns data

  /nm/asstutl/process:
    post:
      tags:
        - Asset Utilisation
      description: Process Asset Util
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              instanceids:
                type: array
                items:
                  type: number
      responses:
        200:
          description: Returns data

  /nm/asstutldetails/createdetail:
    post:
      tags:
        - Asset Utilisation
      description: Create Detail Utilization
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              instanceids:
                type: array
                items:
                  type: number
      responses:
        200:
          description: Returns data

  /nm/asstutl/report:
    post:
      tags:
        - Asset Utilisation
      description: Asset Utilization Report
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              startdate:
                type: string
                description: start date
              enddate:
                type: string
                description: end date
              cloudprovider:
                type: string
                description: cloud provider
              customerid:
                type: number
                description: customer
              # utiltype:
              #   type: string
              #   description: utiltype
              # utilkey:
              #   type: string
              #   description: utilkey
              # instanceid:
              #   type: array
              #   items:
              #     type: number
      responses:
        200:
          description: Returns data

  /nm/asstutl/list:
    post:
      tags:
        - Asset Utilisation
      description: Asset Utilization List
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              startdate:
                type: string
                description: start date
              enddate:
                type: string
                description: end date
              duration:
                type: string
                description: Duration
              utilkeys:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Returns data

  /solutions/costs/list:
    post:
      tags:
        - Tenant
      description: Create a Solution Cost
      parameters:
        - name: body
          in: body
          description: number of items
          required: true
          schema:
            $ref: "#/definitions/solutioncosts"
      responses:
        200:
          description: Returns data
  /solutions/costs/create:
    post:
      tags:
        - Tenant
      description: Create a Solution Cost
      parameters:
        - name: body
          in: body
          description: number of items
          required: true
          schema:
            $ref: "#/definitions/solutioncosts"
      responses:
        200:
          description: Returns data
  /solutions/costs/update:
    post:
      tags:
        - Tenant
      description: Update a Solution Cost
      parameters:
        - name: body
          in: body
          description: number of items
          required: true
          schema:
            $ref: "#/definitions/solutioncosts"
      responses:
        200:
          description: Returns data
  /solutions/costs/bulkcreate:
    post:
      tags:
        - Tenant
      description: Create a Solution Cost
      parameters:
        - name: body
          in: body
          description: number of items
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/solutioncosts"
      responses:
        200:
          description: Returns data

  /instances/create:
    post:
      tags:
        - Tenant
      description: Create a instance
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/instances"
      responses:
        200:
          description: Returns data

  /instances/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: asstdtls
          in: query
          required: false
          description: The id of the entity to retrieve
          type: boolean
        - name: cloudprovider
          in: query
          required: false
          description: The id of the entity to retrieve
          type: string
        - name: costyn
          in: query
          description: number of items to skip
          type: boolean
          required: false
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /instances/update:
    post:
      tags:
        - Tenant
      description: Update a instance
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/instances"
      responses:
        200:
          description: Returns awszone

  /instances/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Tenant
      description: List all instances
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: Offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/instances"
      responses:
        200:
          description: Returns instances list

  /instances/chart:
    post:
      tags:
        - Tenant
      description: List all instances
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/instances"
      responses:
        200:
          description: Returns instances list

  /srm/workflowconfig/create:
    post:
      tags:
        - Solution Request Management
      description: Create a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/workflow"
      responses:
        200:
          description: Returns data

  /srm/workflowconfig/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /srm/workflowconfig/update:
    post:
      tags:
        - Solution Request Management
      description: Update a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/workflow"
      responses:
        200:
          description: Returns workflow

  /srm/workflowconfig/list:
    post:
      tags:
        - Solution Request Management
      description: List all workflow
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/workflow"
      responses:
        200:
          description: Returns workflow list

  /srm/workflowapprover/create:
    post:
      tags:
        - Solution Request Management
      description: Create a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/workflowApprover"
      responses:
        200:
          description: Returns data

  /srm/workflowapprover/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /srm/workflowapprover/update:
    post:
      tags:
        - Solution Request Management
      description: Update a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/workflowApprover"
      responses:
        200:
          description: Returns workflow

  /srm/workflowapprover/list:
    post:
      tags:
        - Solution Request Management
      description: List all workflow
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/workflowApprover"
      responses:
        200:
          description: Returns workflow list

  /srm/schedulerequest/create:
    post:
      tags:
        - Solution Request Management
      description: Create a schedule request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/schedulerequesthdr"
      responses:
        200:
          description: Returns data

  /srm/schedulerequest/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /srm/schedulerequest/update:
    post:
      tags:
        - Solution Request Management
      description: Update a schedule request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/schedulerequesthdr"
      responses:
        200:
          description: Returns schedule request

  /srm/schedulerequest/list:
    post:
      tags:
        - Solution Request Management
      description: List all schedule request
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/schedulerequesthdr"
      responses:
        200:
          description: Returns schedule request list

  /srm/schedulereqdeatil/create:
    post:
      tags:
        - Solution Request Management
      description: Create a schedule request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/schedulerequestdtl"
      responses:
        200:
          description: Returns data

  /srm/schedulereqdeatil/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /srm/schedulereqdeatil/update:
    post:
      tags:
        - Solution Request Management
      description: Update a schedule request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/schedulerequestdtl"
      responses:
        200:
          description: Returns schedule request

  /srm/schedulereqdeatil/list:
    post:
      tags:
        - Solution Request Management
      description: List all schedule request
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/schedulerequestdtl"
      responses:
        200:
          description: Returns schedule request list

  /orchestration/schedule/header/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: List all scheduled orchestration headers
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns orchestration list

  /nm/recommendation/create:
    post:
      tags:
        - Asset Utilisation
      description: Create a recommendation
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/recommendation"
      responses:
        200:
          description: Returns data

  /nm/recommendation/bulkcreate:
    post:
      tags:
        - Asset Utilisation
      description: Create recommendations
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/recommendation"
      responses:
        200:
          description: Returns data

  /nm/recommendation/{id}:
    get:
      tags:
        - Asset Utilisation
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /nm/recommendation/update:
    post:
      tags:
        - Asset Utilisation
      description: Update a recommendation
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/recommendation"
      responses:
        200:
          description: Returns recommendation

  /nm/recommendation/bulkupdate:
    post:
      tags:
        - Asset Utilisation
      description: Update a recommendation
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/recommendation"
      responses:
        200:
          description: Returns recommendation

  /nm/recommendation/list:
    post:
      tags:
        - Asset Utilisation
      description: List all recommendation
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/recommendation"
      responses:
        200:
          description: Returns recommendation list

  /nm/rightsizegroup/create:
    post:
      tags:
        - Asset Utilisation
      description: Create a rightsize groups
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/rightsizegroup"
      responses:
        200:
          description: Returns data

  /nm/rightsizegroup/{id}:
    get:
      tags:
        - Asset Utilisation
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /nm/rightsizegroup/update:
    post:
      tags:
        - Asset Utilisation
      description: Update a rightsize groups
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/rightsizegroup"
      responses:
        200:
          description: Returns rightsize groups

  /nm/rightsizegroup/list:
    post:
      tags:
        - Asset Utilisation
      description: List all rightsize groups
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/rightsizegroup"
      responses:
        200:
          description: Returns rightsize groups list

  /nm/recommendationsetup/update:
    post:
      tags:
        - Asset Utilisation
      description: Update arecommendation setup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/recommendationsetup"
      responses:
        200:
          description: Returnsrecommendation setup

  /nm/recommendationsetup/list:
    post:
      tags:
        - Asset Utilisation
      description: List allrecommendation setup
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/recommendationsetup"
      responses:
        200:
          description: Returnsrecommendation setup list

  /nm/recommendationsetup/create:
    post:
      tags:
        - Asset Utilisation
      description: Create arecommendation setup
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/recommendationsetup"
      responses:
        200:
          description: Returns data

  /nm/recommendationsetup/{id}:
    get:
      tags:
        - Asset Utilisation
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /srm/maintwindow/create:
    post:
      tags:
        - Solution Request Management
      description: Create a maintwindow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: false
          schema:
            $ref: "#/definitions/maintwindow"
      responses:
        200:
          description: Returns data

  /srm/maintwindow/bulkcreate:
    post:
      tags:
        - Solution Request Management
      description: Create maintwindow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/maintwindow"
      responses:
        200:
          description: Returns data

  /srm/maintwindow/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /srm/maintwindow/update:
    post:
      tags:
        - Solution Request Management
      description: Update a maintwindow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/maintwindow"
      responses:
        200:
          description: Returns maintwindow

  /srm/maintwindow/bulkupdate:
    post:
      tags:
        - Solution Request Management
      description: Update a maintwindow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/maintwindow"
      responses:
        200:
          description: Returns maintwindow

  /srm/maintwindow/list:
    post:
      tags:
        - Solution Request Management
      description: List all maintwindow
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/maintwindow"
      responses:
        200:
          description: Returns maintwindow list

  /srm/maintwindowmap/create:
    post:
      tags:
        - Solution Request Management
      description: Create a maintwindow reference
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: false
          schema:
            $ref: "#/definitions/maintwindowmap"
      responses:
        200:
          description: Returns data

  /srm/maintwindowmap/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /srm/maintwindowmap/update:
    post:
      tags:
        - Solution Request Management
      description: Update a maintwindow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/maintwindowmap"
      responses:
        200:
          description: Returns maintwindow

  /srm/maintwindowmap/list:
    post:
      tags:
        - Solution Request Management
      description: List all maintwindow ref
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/maintwindowmap"
      responses:
        200:
          description: Returns maintwindow ref list

  /srm/upgraderequest/create:
    post:
      tags:
        - Solution Request Management
      description: Create a upgraderequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/upgraderequest"
      responses:
        200:
          description: Returns data

  /srm/upgraderequest/bulkcreate:
    post:
      tags:
        - Solution Request Management
      description: Create upgraderequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/upgraderequest"
      responses:
        200:
          description: Returns data

  /srm/upgraderequest/{id}:
    get:
      tags:
        - Solution Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /srm/upgraderequest/update:
    post:
      tags:
        - Solution Request Management
      description: Update a upgraderequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/upgraderequest"
      responses:
        200:
          description: Returns upgraderequest

  /srm/upgraderequest/bulkupdate:
    post:
      tags:
        - Solution Request Management
      description: Update a upgraderequest
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/upgraderequest"
      responses:
        200:
          description: Returns upgraderequest

  /srm/upgraderequest/list:
    post:
      tags:
        - Solution Request Management
      description: List all upgraderequests
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/upgraderequest"
      responses:
        200:
          description: Returns upgraderequest list

  /orchestration/run:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: Manually run an orchestration
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            # properties:
            # _tenant:
            #   type: number
            #   description: Tenant ID
            # _tag:
            #   type: number
            #   description: Tenant ID
            # _customer:
            #   type: number
            #   description: Tenant ID
            # _account:
            #   type: number
            #   description: Tenant ID
            # _maintwindow:
            #   type: number
            #   description: Tenant ID
            # orchid:
            #   type: number
            #   description: Orchestration ID
            # tagvalue:
            #   type: string
            #   description: Orchestration ID
            # runtimestamp:
            #   type: string
            #   description: Orchestration ID
            # param:
            #   type: object
            #   description: Params to pass to orchestration
      responses:
        200:
          description: Returns orchestration

  /orchestration/dry-run:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: Manually run an orchestration
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            # properties:
            # _tenant:
            #   type: number
            #   description: Tenant ID
            # _tag:
            #   type: number
            #   description: Tenant ID
            # _customer:
            #   type: number
            #   description: Tenant ID
            # _account:
            #   type: number
            #   description: Tenant ID
            # _maintwindow:
            #   type: number
            #   description: Tenant ID
            # orchid:
            #   type: number
            #   description: Orchestration ID
            # tagvalue:
            #   type: string
            #   description: Orchestration ID
            # runtimestamp:
            #   type: string
            #   description: Orchestration ID
            # param:
            #   type: object
            #   description: Params to pass to orchestration
      responses:
        200:
          description: Returns orchestration

  /orchestration/create:
    post:
      tags:
        - Orchestration
      description: Create a Orchestration
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns data

  /orchestration/{id}:
    get:
      tags:
        - Orchestration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /orchestration/update:
    post:
      tags:
        - Orchestration
      description: Update a orchestration
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns orchestration

  /orchestration/list:
    post:
      tags:
        - Orchestration
      description: List all orchestration
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns orchestration list

  /orchestration/logs/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: List all orchestration logs
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              _tenant:
                type: number
                description: Tenant ID

  /orchestration/schedule/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: List all scheduled orchestration
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
      responses:
        200:
          description: Returns orchestration list

  /orchestration/schedule/update/{id}:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: Manually run an orchestration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              _tenant:
                type: number
                description: Tenant ID
              _tag:
                type: number
                description: Tenant ID
              _customer:
                type: number
                description: Tenant ID
              _account:
                type: number
                description: Tenant ID
              _maintwindow:
                type: number
                description: Tenant ID
              orchid:
                type: number
                description: Orchestration ID
              tagvalue:
                type: string
                description: Orchestration ID
              runtimestamp:
                type: string
                description: Orchestration ID
              param:
                type: object
                description: Params to pass to orchestration
      responses:
        200:
          description: Returns orchestration

  /orchestration/schedule/delete/{id}:
    delete:
      security:
        - ApiKeyAuth: []
      tags:
        - Orchestration
      description: Manually run an orchestration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
      responses:
        200:
          description: Returns orchestration

  /orch/connectivity/check:
    post:
      tags:
        - Orchestration
      description: Check Orchestration conn
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns orchestration

  /base/alertconfigs/create:
    post:
      tags:
        - Base
      security:
        - ApiKeyAuth: []
      description: Create a Orchestration
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns data

  /base/alertconfigs/{id}:
    get:
      tags:
        - Base
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /base/alertconfigs/update:
    post:
      tags:
        - Base
      security:
        - ApiKeyAuth: []
      description: Update a orchestration
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns orchestration

  /base/alertconfigs/list:
    post:
      tags:
        - Base
      security:
        - ApiKeyAuth: []
      description: List all orchestration
      parameters:
        - name: limit
          in: query
          description:
          required: false
        - name: offset
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/orchestration"
      responses:
        200:
          description: Returns orchestration list

  /aws/internetgateway/create:
    post:
      tags:
        - Deployment-AWS
      description: Create a internetgateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsigw"
      responses:
        200:
          description: Returns AWS internetgateway data

  /aws/internetgateway/{id}:
    get:
      tags:
        - Deployment-AWS
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS internetgateway with the specified id
        404:
          description: No record Found

  /aws/internetgateway/update:
    post:
      tags:
        - Deployment-AWS
      description: Update a internetgateway
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awsigw"
      responses:
        200:
          description: Returns internetgateway

  /aws/internetgateway/list:
    post:
      tags:
        - Deployment-AWS
      description: List all AWS internetgateway
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/awsigw"
      responses:
        200:
          description: Returns AWS internetgateway list

  /nm/asst/budget/create:
    post:
      tags:
        - Asset Budget
      description: Create a budget
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: false
          schema:
            $ref: "#/definitions/AssetBudget"
      responses:
        200:
          description: Returns budget data

  /nm/asst/budget/{id}:
    get:
      tags:
        - Asset Budget
      parameters:
        - name: id
          in: path
          required: false
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the AWS internetgateway with the specified id
        404:
          description: No record Found

  /nm/asst/budget/download:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Asset Budget
      parameters:
        - name: id
          in: path
          required: false
          description: The id of the entity to download
          type: integer
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              startdate:
                type: string
                description: Start Date
              enddate:
                type: string
                description: End Date
              tenantid:
                type: number
                description: tenantid
              cloudprovider:
                type: string
                description: To group by resource or get resource type level billing
      responses:
        200:
          description: Return the AWS internetgateway with the specified id
        404:
          description: No record Found

  /nm/asst/budget/update:
    post:
      tags:
        - Asset Budget
      description: Update a Asset Budget
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: false
          schema:
            $ref: "#/definitions/AssetBudget"
      responses:
        200:
          description: Returns internetgateway

  /nm/asst/budget/list:
    post:
      tags:
        - Asset Budget
      description: List all Asset Budget
      parameters:
        - name: filterbudget
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetBudget"
      responses:
        200:
          description: Returns AssetBudget list
  /nm/asst/billing/list:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing
      parameters:
        - name: filterby
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetBilling"
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/filter-values:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing
      parameters:
        - name: filterby
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetBilling"
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/resource-billing:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Asset Billing
      description: Drill-down resource level and resource type level billing
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              startdate:
                type: string
                description: Start Date
              enddate:
                type: string
                description: End Date
              tenantid:
                type: number
                description: tenantid
              resourcetype:
                type: string
                description: To group by resource or get resource type level billing
              filters:
                description: Any column on table is a valid filter.
                type: object
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/create:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetBilling"
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/{id}:
    get:
      tags:
        - Asset Billing
      parameters:
        - name: id
          in: path
          required: false
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/update:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetBilling"
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/getdailybilling:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/AssetBilling"
      responses:
        200:
          description: Returns AssetBilling list
  /nm/asst/billing/summary:
    post:
      tags:
        - Asset Billing
      description: List all Asset Billing Summary
      parameters:
        - name: summarydtl
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              startdt:
                type: string
                description: Start date
              enddt:
                type: string
                description: End date.
              cloudprovider:
                type: string
                description: Cloud provider
              customerid:
                type: integer
                description: Customerid
              resourcetype:
                type: string
                description: Resource type
              instancerefid:
                type: array
                items:
                  type: string
                description: Instanceref
              resourceids:
                type: array
                items:
                  type: string
              tagid:
                type: integer
                description: Tag
              tagvalues:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Returns AssetBilling Summary
  /nm/asst/daily/billing/list:
    post:
      tags:
        - Asset Daily Billing
      description: List all Asset Daily Billing
      parameters:
        - name: customer
          in: query
          description:
          required: false
        - name: instance
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/AssetDailyBilling"
      responses:
        200:
          description: Returns AssetDailyBilling list

  /base/hook:
    post:
      tags:
        - Base
      description: Create a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns data

  /base/webhook/{module}/{type}:
    put:
      tags:
        - Base
      description: Create a eventlog
      parameters:
        - name: module
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: type
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              notes:
                type: number
                description: notes
      responses:
        200:
          description: Returns data
    post:
      tags:
        - Base
      description: Create a eventlog
      parameters:
        - name: module
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: type
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              notes:
                type: number
                description: notes
      responses:
        200:
          description: Returns data

  /monitoring/get-summary-metrics:
    post:
      tags:
        - Base
      description: Get monitoring logs
      parameters:
        - name: limit
          in: query
          description:
          required: false
        - name: offset
          in: query
          description:
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              customer:
                type: number
                description: Customer id
              account:
                type: number
                description: Customer id
              tag:
                type: number
                description: Customer id
              tagvalue:
                type: string
                description: Customer id
              search:
                type: string
                description: Search phrase
      responses:
        200:
          description: Returns data

  /eventlog/create:
    post:
      tags:
        - Base
      description: Create a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns data

  /eventlog/storeevents:
    post:
      tags:
        - Base
      description: Store a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns data

  /eventlog/grafanaalert:
    post:
      tags:
        - Base
      description: Store a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns data

  /eventlog/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /eventlog/update:
    post:
      tags:
        - Base
      description: Update a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns awszone

  /eventlog/list:
    post:
      tags:
        - Base
      description: List all events
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/Eventlog"
      responses:
        200:
          description: Returns Eventlog list

  /eventlog/delete/{id}:
    delete:
      tags:
        - Base
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /vmwarevm/create:
    post:
      tags:
        - VMWare
      description: Create a eventlog
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/VMware"
      responses:
        200:
          description: Returns data

  /vmwarevm/{id}:
    get:
      tags:
        - VMWare
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /vmwarevm/update:
    post:
      tags:
        - VMWare
      description: Update a vm
      parameters:
        - name: body
          in: body
          description: filters to be applied
          required: true
      schema:
        $ref: "#/definitions/VMware"
      responses:
        200:
          description: Update VM

  /vmwarevm/list:
    post:
      tags:
        - VMWare
      description: List all events
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/VMware"
      responses:
        200:
          description: Returns VM list

  /vmwarevm/delete/{id}:
    delete:
      tags:
        - VMWare
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /vmwarecluster/create:
    post:
      tags:
        - VMWare
      description: Create a Cluster
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Clusters"
      responses:
        200:
          description: Returns data

  /vmwarecluster/{id}:
    get:
      tags:
        - VMWare
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /vmwarecluster/update:
    post:
      tags:
        - VMWare
      description: Update a Cluster
      parameters:
        - name: body
          in: body
          description: filters to be applied
          required: true
      schema:
        $ref: "#/definitions/Clusters"
      responses:
        200:
          description: Update Cluster

  /vmwarecluster/list:
    post:
      tags:
        - VMWare
      description: List all events
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/Clusters"
      responses:
        200:
          description: Returns Cluster list

  /vmwarecluster/delete/{id}:
    delete:
      tags:
        - VMWare
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /vmwaredc/create:
    post:
      tags:
        - VMWare
      description: Create a Datacenter
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Datacenter"
      responses:
        200:
          description: Returns data

  /vmwaredc/{id}:
    get:
      tags:
        - VMWare
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /vmwaredc/update:
    post:
      tags:
        - VMWare
      description: Update a Datacenter
      parameters:
        - name: body
          in: body
          description: filters to be applied
          required: true
      schema:
        $ref: "#/definitions/Datacenter"
      responses:
        200:
          description: Update Datacenter

  /vmwaredc/list:
    post:
      tags:
        - VMWare
      description: List all events
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/Datacenter"
      responses:
        200:
          description: Returns Datacenter list

  /vmwaredc/delete/{id}:
    delete:
      tags:
        - VMWare
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /vmwarehost/create:
    post:
      tags:
        - VMWare
      description: Create a VMHost
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/VMHost"
      responses:
        200:
          description: Returns data

  /vmwarehost/{id}:
    get:
      tags:
        - VMWare
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /vmwarehost/update:
    post:
      tags:
        - VMWare
      description: Update a Datacenter
      parameters:
        - name: body
          in: body
          description: filters to be applied
          required: true
      schema:
        $ref: "#/definitions/VMHost"
      responses:
        200:
          description: Update VMHost

  /vmwarehost/list:
    post:
      tags:
        - VMWare
      description: List all events
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/VMHost"
      responses:
        200:
          description: Returns VMHost list

  /vmwarehost/delete/{id}:
    delete:
      tags:
        - VMWare
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /vmware/synchronization:
    post:
      tags:
        - VMWare
      description: Sync all assets
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/VMHost"
      responses:
        200:
          description: Sync all assets

  /vmware/filterby:
    post:
      tags:
        - VMWare
      description: Get all assets
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/VMHost"
      responses:
        200:
          description: Get all assets

  /base/dashboardconfigheader/create:
    post:
      tags:
        - Base
      description: Create a dashboard config header
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigheader"
      responses:
        200:
          description: Returns data

  /base/dashboardconfigheader/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /base/dashboardconfigheader/update:
    post:
      tags:
        - Base
      description: Update a dashboard config header
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigheader"
      responses:
        200:
          description: Returns updated data

  /base/dashboardconfigheader/bulkupdate:
    post:
      tags:
        - Base
      description: Update a dashboard config
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigheader"
      responses:
        200:
          description: Returns updated data

  /base/dashboardconfigheader/list:
    post:
      tags:
        - Base
      description: List all dashboard config headers
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/dashboardconfigheader"
      responses:
        200:
          description: Returns dashboard config headers

  /base/dashboardconfigheader/delete/{id}:
    delete:
      tags:
        - Base
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /base/dashboardconfigdetail/create:
    post:
      tags:
        - Base
      description: Create a dashboard config header
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigdetail"
      responses:
        200:
          description: Returns data

  /base/dashboardconfigdetail/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /base/dashboardconfigdetail/update:
    post:
      tags:
        - Base
      description: Update a dashboard config header
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigdetail"
      responses:
        200:
          description: Returns updated data

  /base/dashboardconfigdetail/bulkupdate:
    post:
      tags:
        - Base
      description: Update a dashboard config details
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/dashboardconfigdetail"
      responses:
        200:
          description: Returns updated data

  /base/dashboardconfigdetail/list:
    post:
      tags:
        - Base
      description: List all dashboard config headers
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/dashboardconfigdetail"
      responses:
        200:
          description: Returns dashboard config headers

  /base/dashboardconfigdetail/delete/{id}:
    delete:
      tags:
        - Base
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /incidents/create:
    post:
      tags:
        - Base
      description: Create a incidents
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/incidents"
      responses:
        200:
          description: Returns data

  /incidents/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /incidents/update:
    post:
      tags:
        - Base
      description: Update a incidents
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/incidents"
      responses:
        200:
          description: Returns updated data

  /incidents/list:
    post:
      tags:
        - Base
      description: List all incidents
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/incidents"
      responses:
        200:
          description: Returns incidents

  /incidents/delete/{id}:
    delete:
      tags:
        - Base
      description: Delete incidents
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/slatemplates/create:
    post:
      tags:
        - SLA
      description: Create a sla templates
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/SLATemplates"
      responses:
        200:
          description: Returns data

  /tenants/slatemplates/{id}:
    get:
      tags:
        - SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/slatemplates/update:
    post:
      tags:
        - SLA
      description: Update a sla templates
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/SLATemplates"
      responses:
        200:
          description: Returns updated data

  /tenants/slatemplates/list:
    post:
      tags:
        - SLA
      description: List all sla templates
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/SLATemplates"
      responses:
        200:
          description: Returns sla templates

  /tenants/slatemplates/delete/{id}:
    delete:
      tags:
        - Base
      description: Delete sla templates
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/kpiuptime/create:
    post:
      tags:
        - SLA
      description: Create a kpi uptime
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KpiUptime"
      responses:
        200:
          description: Returns data

  /tenants/kpiuptime/{id}:
    get:
      tags:
        - SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/kpiuptime/update:
    post:
      tags:
        - SLA
      description: Update a sla templates
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KpiUptime"
      responses:
        200:
          description: Returns updated data

  /tenants/kpiuptime/list:
    post:
      tags:
        - SLA
      description: List all Kpi uptime
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/KpiUptime"
      responses:
        200:
          description: Returns sla templates

  /tenants/kpiuptime/delete/{id}:
    delete:
      tags:
        - SLA
      description: Delete Kpi uptime
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/kpitickets/create:
    post:
      tags:
        - SLA
      description: Create a kpi tickets
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KpiTickets"
      responses:
        200:
          description: Returns data

  /tenants/kpitickets/{id}:
    get:
      tags:
        - SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/kpitickets/update:
    post:
      tags:
        - SLA
      description: Update a kpi tickets
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KpiTickets"
      responses:
        200:
          description: Returns updated data

  /tenants/kpitickets/list:
    post:
      tags:
        - SLA
      description: List all Kpi tickets
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/KpiTickets"
      responses:
        200:
          description: Returns Kpi tickets

  /tenants/kpitickets/delete/{id}:
    delete:
      tags:
        - SLA
      description: Delete Kpi uptime
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/servicecredits/create:
    post:
      tags:
        - SLA
      description: Create a service credits
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ServiceCredits"
      responses:
        200:
          description: Returns data

  /tenants/servicecredits/{id}:
    get:
      tags:
        - SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/servicecredits/update:
    post:
      tags:
        - SLA
      description: Update a service credits
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/ServiceCredits"
      responses:
        200:
          description: Returns updated data

  /tenants/servicecredits/list:
    post:
      tags:
        - SLA
      description: List all Service Credits
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/ServiceCredits"
      responses:
        200:
          description: Returns Service Credits

  /tenants/servicecredits/delete/{id}:
    delete:
      tags:
        - SLA
      description: Delete Service Credits Items
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/incidentsla/create:
    post:
      tags:
        - SLA
      description: Create a incidentsla
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/IncidentSla"
      responses:
        200:
          description: Returns data

  /tenants/incidentsla/{id}:
    get:
      tags:
        - SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/incidentsla/update:
    post:
      tags:
        - SLA
      description: Update a incidentsla
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/IncidentSla"
      responses:
        200:
          description: Returns updated data

  /tenants/incidentsla/list:
    post:
      tags:
        - SLA
      description: List all Service Credits
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/IncidentSla"
      responses:
        200:
          description: Returns Service Credits

  /tenants/incidentsla/delete/{id}:
    delete:
      tags:
        - SLA
      description: Delete Service Credits Items
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /prometheus/uptime:
    post:
      tags:
        - Dashboard
      description: List all
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              end:
                type: string
              start:
                type: string
      responses:
        200:
          description: Returns

  /prometheus/vmstatus:
    post:
      tags:
        - Dashboard
      description: List all
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              url:
                type: string
              instances:
                type: string
      responses:
        200:
          description: Returns

  /customers/upload:
    post:
      tags:
        - Customer
      description: upload customer logo
      consumes:
        - multipart/form-data
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          description: File to upload
        - in: formData
          name: formData
          type: string
          required: false
          description: File data
      responses:
        200:
          description: Returns created File data

  /prometheus/kpisummary:
    post:
      tags:
        - Dashboard
      description: List all  kpisummary
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              tenantid:
                type: number
              customerid:
                type: number
              tagid:
                type: number
              tagvalue:
                type: string
      responses:
        200:
          description: Returns

  /prometheus/alertcount:
    post:
      tags:
        - Dashboard
      description: List allcount
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              tenantid:
                type: number
              startdate:
                type: string
              enddate:
                type: string
      responses:
        200:
          description: Returns

  /prometheus/datewisealertcount:
    post:
      tags:
        - Dashboard
      description: List allcount
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              tenantid:
                type: number
              startdate:
                type: string
              enddate:
                type: string
      responses:
        200:
          description: Returns

  /prometheus/datalist:
    post:
      tags:
        - Dashboard
      description: List data
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: false
          schema:
            type: object
            properties:
              tenantid:
                type: number
              startdate:
                type: string
              enddate:
                type: string
      responses:
        200:
          description: Returns
  /base/commentdoc/create:
    post:
      tags:
        - Base
      description: Create a CommentsDoc
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CommentsDoc"
      responses:
        200:
          description: Returns data

  /base/commentdoc/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /base/commentdoc/update:
    post:
      tags:
        - Base
      description: Update a CommentsDoc
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CommentsDoc"
      responses:
        200:
          description: Returns updated data

  /base/commentdoc/list:
    post:
      tags:
        - Base
      description: List all CommentsDoc
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/CommentsDoc"
      responses:
        200:
          description: Returns CommentsDocs

  /tenants/customer/incidentsla/create:
    post:
      tags:
        - Customer SLA
      description: Create a customer incidentsla
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerIncidentSla"
      responses:
        200:
          description: Returns data

  /tenants/customer/incidentsla/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/customer/incidentsla/update:
    post:
      tags:
        - Customer SLA
      description: Update a incidentsla
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerIncidentSla"
      responses:
        200:
          description: Returns updated data

  /tenants/customer/incidentsla/list:
    post:
      tags:
        - Customer SLA
      description: List all Service Credits
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/CustomerIncidentSla"
      responses:
        200:
          description: Returns Service Credits

  /tenants/customer/incidentsla/delete/{id}:
    delete:
      tags:
        - Customer SLA
      description: Delete Service Credits Items
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/customer/servicecredits/create:
    post:
      tags:
        - Customer SLA
      description: Create a service credits
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerServiceCredits"
      responses:
        200:
          description: Returns data

  /tenants/customer/servicecredits/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenants/customer/servicecredits/update:
    post:
      tags:
        - Customer SLA
      description: Update a service credits
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerServiceCredits"
      responses:
        200:
          description: Returns updated data

  /tenants/customer/servicecredits/list:
    post:
      tags:
        - Customer SLA
      description: List all Service Credits
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/CustomerServiceCredits"
      responses:
        200:
          description: Returns Service Credits

  /tenants/customer/servicecredits/delete/{id}:
    delete:
      tags:
        - Customer SLA
      description: Delete Service Credits Items
      parameters:
        - name: id
          in: path
          description: Id of the record
      responses:
        200:
          description: Returns deleted record details

  /tenants/customer/availabilitysla/list:
    post:
      tags:
        - Customer SLA
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/AvailabilitySla"
      responses:
        200:
          description: Returns service request actions list

  /tenants/customer/availabilitysla/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/customer/availabilitysla/create:
    post:
      tags:
        - Customer SLA
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AvailabilitySla"
      responses:
        200:
          description: Returns Service Request
  /tenants/customer/availabilitysla/update:
    post:
      tags:
        - Customer SLA
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/AvailabilitySla"
      responses:
        200:
          description: Returns Service Request Actions
  /tenants/kpi/report/configheader/list:
    post:
      tags:
        - KPI Reporting
      description: List all service request actions
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigHdr"
      responses:
        200:
          description: Returns service request actions list

  /tenants/kpi/report/configheader/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/kpi/report/configheader/create:
    post:
      tags:
        - KPI Reporting
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigHdr"
      responses:
        200:
          description: Returns Service Request
  /tenants/kpi/report/configheader/update:
    post:
      tags:
        - Customer SLA
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigHdr"
      responses:
        200:
          description: Returns Service Request Actions

  /tenants/kpi/report/configdetail/list:
    post:
      tags:
        - KPI Reporting
      description: List all service request actions
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigDtl"
      responses:
        200:
          description: Returns service request actions list

  /tenants/kpi/report/configdetail/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/kpi/report/configdetail/create:
    post:
      tags:
        - KPI Reporting
      description: Create a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigDtl"
      responses:
        200:
          description: Returns Service Request
  /tenants/kpi/report/configdetail/update:
    post:
      tags:
        - Customer SLA
      description: Update a Service Request Actions
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/KPIReportConfigDtl"
      responses:
        200:
          description: Returns Service Request Actions
  /tenants/customer/kpi/list:
    post:
      tags:
        - KPI Reporting
      description: List all
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/CustomerKPIReport"
      responses:
        200:
          description: Returns list

  /tenants/customer/kpi/{id}:
    get:
      tags:
        - Customer SLA
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data for a specified id
        404:
          description: No record Found
  /tenants/customer/kpi/bulkcreate:
    post:
      tags:
        - KPI Reporting
      description: Create a KPI
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerKPIReport"
      responses:
        200:
          description: Returns KPI
  /tenants/customer/kpi/bulkupdate:
    post:
      tags:
        - Customer KPI
      description: Update a KPI
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerKPIReport"
      responses:
        200:
          description: Returns KPI
  /tenants/customer/kpi/update:
    post:
      tags:
        - Customer KPI
      description: Update a KPI
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/CustomerKPIReport"
      responses:
        200:
          description: Returns KPI

  /aws/common/instancesync:
    post:
      tags:
        - AWS - Common
      description: AWS Data Synchronization
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/awszone"
      responses:
        200:
          description: Returns all examples

  /base/assetrecords/resourcebyasset:
    post:
      tags:
        - Asset Records
      description: Get all distinct values for the respective fieldkeys
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
                description: Tenant ID
              resourceid:
                type: string
                description: Resource ID
      responses:
        200:
          description: Returns CloudAssets

  /base/assets/instance/{action}:
    post:
      tags:
        - Base
      description: VM - Instance Based on the specified action
      parameters:
        - name: action
          in: path
          required: true
          description: The mode/action of the instance
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              instancerefid:
                type: string
      responses:
        200:
          description: Returns Action status
  /monitoring/synthetics/create:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Create a new monitoring with synthetics
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Script file to upload
        - in: formData
          name: formData
          type: string
          required: false
          description: Synthetic data
          schema:
            type: object
            properties:
              tenantid:
                type: number
              type:
                type: string
              name:
                type: string
              instancerefid:
                type: string
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list of configured monitoring
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: Offset
          required: false
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
              tenantid:
                type: number
              region:
                type: string
              searchText:
                type: string
              headers:
                type: array
                items:
                  type: object
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics/detail/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: Offset
          required: false
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics/{id}:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
        - name: start
          in: query
          description: Required number of run hours
          required: false
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics/delete/{id}:
    delete:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Delete the configured canary
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to delete
          type: integer
      responses:
        200:
          description: Returns Action status

  /monitoring/synthetics/monitoring/list:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list monitoring
      parameters:
        - name: tenantid
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: body
          in: body
          description: body data
          required: false
          schema:
            type: object
            properties:
              path:
                type: string
      responses:
        200:
          description: Returns Action status
  /monitoring/synthetics/{id}/artifacts:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              path:
                type: string
      responses:
        200:
          description: Returns Action status
  /ssm/inventory:
    post:
      tags:
        - SSM
      description: SSM - Inventory Dashboard
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              accountid:
                type: number
              region:
                type: string
              instancerefid:
                type: number
      responses:
        200:
          description: Returns Inventory Dashboard results
  /ssm/baselines:
    post:
      tags:
        - SSM
      description: SSM - List of Existing Baselines
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              accountid:
                type: number
              region:
                type: string
              instancerefid:
                type: number
      responses:
        200:
          description: Returns Existing Baselines results
  /ssm/patchcompliance:
    post:
      tags:
        - SSM
      description: SSM - Compliance Reporting
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              accountid:
                type: number
              region:
                type: string
              instancerefid:
                type: number
      responses:
        200:
          description: Returns Reported Compliance results
  /ssm/createinventory:
    post:
      tags:
        - SSM
      description: SSM - Create/Setup Inventory
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              accountid:
                type: number
              region:
                type: string
              applicationyn:
                type: string
              awscomponentyn:
                type: string
              networkconfigyn:
                type: string
              windownsupdateyn:
                type: string
              instancedtlinfoyn:
                type: string
              servicesyn:
                type: string
              windowsroleyn:
                type: string
              custominventoryyn:
                type: string
              billinginfoyn:
                type: string
      responses:
        200:
          description: Returns created association results
  /ssm/createbaseline:
    post:
      tags:
        - SSM
      description: SSM - Create Baseline
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
              pbname:
                type: string
              osname:
                type: string
              description:
                type: string
      responses:
        200:
          description: Returns created baseline results
  /ssm/updatebaseline:
    post:
      tags:
        - SSM
      description: SSM - Update Baseline
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
              baselineid:
                type: string
              pbname:
                type: string
              osname:
                type: string
              description:
                type: string
      responses:
        200:
          description: Returns updated baseline results
  /ssm/deletebaseline:
    post:
      tags:
        - SSM
      description: SSM - Delete Baseline
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              baselineid:
                type: string
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns delete baseline results
  /ssm/baselines/makedefault:
    post:
      tags:
        - SSM
      description: SSM - Update Baseline
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              BaselineId:
                type: string
      responses:
        200:
          description: Returns delete baseline results
  /ssm/syncssm:
    post:
      tags:
        - SSM
      description: SSM - Sync SSM
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
      responses:
        200:
          description: Returns delete baseline results
  /ssm/list:
    post:
      tags:
        - SSM
      description: SSM - list details based on the association type
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
              type:
                type: string
      responses:
        200:
          description: Returns results of matched associations
  /ssm/configpatching:
    post:
      tags:
        - SSM
      description: SSM - Config Patching
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              baselineid:
                type: string
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
              pbname:
                type: string
              osname:
                type: string
              description:
                type: string
      responses:
        200:
          description: Returns updated baseline results
  /ssm/patchmanager:
    post:
      tags:
        - SSM
      description: SSM - Patchmanager Dashboard
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns Action status
  /ssm/associationstatus:
    post:
      tags:
        - SSM
      description: SSM - List of Association status of instance
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              instancerefid:
                type: string
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns Existing Association Status results
  /ssm/associations:
    post:
      tags:
        - SSM
      description: SSM - List of Associations
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              instancerefid:
                type: string
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns Existing Associations
  /ssm/instanceprofiles:
    post:
      tags:
        - SSM
      description: SSM - List of Instance Profiles
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns Existing Instance Profiles
  /ssm/updaterole:
    post:
      tags:
        - SSM
      description: SSM - Update IAM Role
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              instancerefid:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns UPDATED IAM Role
  /ssm/synchronization:
    post:
      tags:
        - SSM
      description: SSM - Agent Details SYNC
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns STATUS
  /ssm/listcommands:
    post:
      tags:
        - SSM
      description: SSM - List Commands
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Returns commands list
  /ssm/compliance/{instancerefid}:
    post:
      tags:
        - SSM
      parameters:
        - name: instancerefid
          in: path
          required: true
          description: The instancerefid of the entity
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Compliance details of instanceid
  /ssm/compliancesummary:
    post:
      tags:
        - SSM
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Compliance details of instanceid
  /ssm/command/{commandid}:
    post:
      tags:
        - SSM
      parameters:
        - name: commandid
          in: path
          required: true
          description: The commandid of the entity
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Command overview details of instance
  /ssm/association/{associationid}:
    post:
      tags:
        - SSM
      parameters:
        - name: associationid
          in: path
          required: true
          description: The associationid of the entity
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Association overview details of instance
  /ssm/associationexecutions/{associationid}:
    post:
      tags:
        - SSM
      parameters:
        - name: associationid
          in: path
          required: true
          description: The associationid of the entity
          type: string
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Association overview details of instance
  /ssm/maintenancewindows:
    post:
      tags:
        - SSM
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
      responses:
        200:
          description: Return the Association overview details of instance
  /secretsmanager/list:
    post:
      tags:
        - Secrets Manager
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              region:
                type: string
              tenantid:
                type: number
              accountid:
                type: number
              instancerefid:
                type: string
      responses:
        200:
          description: Return the secret details of instance
  /secretsmanager/description:
    post:
      tags:
        - Secrets Manager
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              env:
                type: string
              customerid:
                type: number
              resourcetype:
                type: string
              resourcerefid:
                type: string
              username:
                type: string
      responses:
        200:
          description: Return the secret details of instance
  /tenant/workflow/create:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Create a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflow"
      responses:
        200:
          description: Returns data

  /tenant/workflow/{id}:
    get:
      tags:
        - Tenant Workflow Configuration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenant/workflow/update:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Update a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflow"
      responses:
        200:
          description: Returns workflow

  /tenant/workflow/list:
    post:
      tags:
        - Tenant Workflow Configuration
      description: List all workflow
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/tnworkflow"
      responses:
        200:
          description: Returns workflow list

  /tenant/workflowapprover/create:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Create a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflowApprover"
      responses:
        200:
          description: Returns data

  /tenant/workflowapprover/{id}:
    get:
      tags:
        - Tenant Workflow Configuration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenant/workflowapprover/update:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Update a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflowApprover"
      responses:
        200:
          description: Returns workflow

  /tenant/workflowapprover/list:
    post:
      tags:
        - Tenant Workflow Configuration
      description: List all workflow
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/tnworkflowApprover"
      responses:
        200:
          description: Returns workflow list
  /tenant/workflowapprover/bulkupdate:
    post:
      tags:
        - Tenant Workflow Configuration
      description: bulkupdate a workflow approver data
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflowApprover"
      responses:
        200:
          description: Returns data
  /tenant/workflowactions/create:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Create a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflowAction"
      responses:
        200:
          description: Returns data
  /tenant/workflowactions/bulkcreate:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Create bulk workflow action
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/tnworkflowAction"
      responses:
        200:
          description: Returns data
  /tenant/workflowactions/{id}:
    get:
      tags:
        - Tenant Workflow Configuration
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /tenant/workflowactions/update:
    post:
      tags:
        - Tenant Workflow Configuration
      description: Update a workflow
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkflowAction"
      responses:
        200:
          description: Returns workflow

  /tenant/workflowactions/list:
    post:
      tags:
        - Tenant Workflow Configuration
      description: List all workflow
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/tnworkflowAction"
      responses:
        200:
          description: Returns workflow list

  /tenant/workflowactions/bulkupdate:
    post:
      tags:
        - Tenant Workflow update bulk
      description: Update bulk workflow action
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/tnworkflowAction"
      responses:
        200:
          description: Returns data

  /monitoring/ssl/import:
    post:
      tags:
        - Monitoring
      description: Create a new monitoring with SSL
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Script file to upload
        - in: formData
          name: formData
          type: string
          required: false
          description: Script data
          schema:
            $ref: "#/definitions/MonitoringSSLHdr"

      responses:
        200:
          description: Returns Action status

  /monitoring/ssl/create:
    post:
      tags:
        - Monitoring
      description: Create a new monitoring with SSL
      parameters:
        - name: body
          in: body
          description: body data
          required: true
          schema:
            type: object
            properties:
              tenantid:
                type: number
              name:
                type: string
      responses:
        200:
          description: Returns Action status

  /monitoring/ssl/list:
    post:
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: count
          in: query
          description: count
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/MonitoringSSLHdr"
      responses:
        200:
          description: Returns Action status

  /monitoring/ssl/{id}:
    get:
      tags:
        - Monitoring
      description: Get list of configured monitoring
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Returns Action status

  /monitoring/ssl/update:
    post:
      tags:
        - Monitoring
      description: Update
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/MonitoringSSLHdr"
      responses:
        200:
          description: Returns Action status
  /base/workpack/export:
    post:
      tags:
        - workpack
      description: export a workpack
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkpack"
      responses:
        200:
          description: Returns data

  /base/assetrecords/resourcedetails/txnref:
    post:
      tags:
        - Common txn ref
      description: Common txn ref
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/txnref"
      responses:
        200:
          description: Returns data

  /base/assetrecords/resourcedetails/updatetxn:
    post:
      tags:
        - Common txn ref
      description: Update transction reference
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/txnref"
      responses:
        200:
          description: Returns data

  /base/workpack/execute:
    post:
      tags:
        - workpack
      description: execute a workpack
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/tnworkpackexecute"
      responses:
        200:
          description: Returns data
  /base/workpack/execute/list:
    post:
      tags:
        - workpack
      description: execute a workpack
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/txnref"
      responses:
        200:
          description: Returns data

  /base/workpack/watchlist/update:
    post:
      tags:
        - workpack
      description: watchlist
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/txnref"
      responses:
        200:
          description: Returns data

  /base/workpack/workflowrelation/list:
    post:
      tags:
        - workpack
      description: workpack relation list
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/workpackrelations"
      responses:
        200:
          description: Returns data

  /base/assets/productlist:
    post:
      tags:
        - Base
      description: List product
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: Returns service request product list

  /base/assets/txnref/bulkcreate:
    post:
      tags:
        - Base
      description: Bulk create txnref
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/txnref"
      responses:
        200:
          description: Returns service request txnref bulk create

  /base/assets/product/add:
    post:
      tags:
        - Base
      description: Add product
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: Returns service request Add product

  /cloudassets/datacenters:
    get:
      tags:
        - Nutanix - Datacenters
      parameters:
        - name: body
          in: path
          required: true
          description: the entity to retrieve
          type: array
      responses:
        200:
          description: Return the data with the specified id
    post:
      tags:
        - Nutanix - Datacenters
      description: Create nutanix
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NutanixDatacenter"
      responses:
        200:
          description: Returns Service Request
  /cloudassets/clusters:
    post:
      tags:
        - Nutanix - Clusters
      description: Create nutanix
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NutanixClusters"
      responses:
        200:
          description: Returns Service Request
    get:
      tags:
        - Nutanix - Clusters
      parameters:
        - name: body
          in: path
          required: true
          description: the entity to retrieve
          type: array
      responses:
        200:
          description: Return the data with the specified id
  /cloudassets/hosts:
    get:
      tags:
        - Nutanix - Hosts
      parameters:
        - name: body
          in: path
          required: true
          description: the entity to retrieve
          type: array
      responses:
        200:
          description: Return the data with the specified id
    post:
      tags:
        - Nutanix - Hosts
      description: Create nutanix
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NutanixHost"
      responses:
        200:
          description: Returns Service Request
  /cloudassets/instances:
    get:
      tags:
        - Nutanix - Instances
      parameters:
        - name: body
          in: path
          required: true
          description: the entity to retrieve
          type: array
      responses:
        200:
          description: Return the data with the specified id
    post:
      tags:
        - Nutanix - Instances
      description: Create nutanix
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NutanixVM"
      responses:
        200:
          description: Returns Service Request
  /cloudassets/instance/{param}:
    get:
      tags:
        - Nutanix - Instances
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    delete:
      tags:
        - Nutanix - Instances
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    put:
      tags:
        - Nutanix - Instances
      description:
      parameters:
        - name: param
          in: path
          required: true
          type: string
        - name: body
          in: body
          type: string
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/NutanixDatacenter"
      responses:
        200:
          description: Returns data
  /cloudassets/cluster/{param}:
    get:
      tags:
        - Nutanix - Clusters
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    delete:
      tags:
        - Nutanix - Clusters
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    put:
      tags:
        - Nutanix - Clusters
      description:
      parameters:
        - name: param
          in: path
          required: true
          type: string
        - name: body
          in: body
          type: string
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/NutanixClusters"
      responses:
        200:
          description: Returns data
  /cloudassets/host/{param}:
    get:
      tags:
        - Nutanix - Hosts
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    delete:
      tags:
        - Nutanix - Hosts
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    put:
      tags:
        - Nutanix - Hosts
      description:
      parameters:
        - name: param
          in: path
          required: true
          type: string
        - name: body
          in: body
          type: string
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/NutanixHost"
      responses:
        200:
          description: Returns data
  /cloudassets/datacenter/{param}:
    get:
      tags:
        - Nutanix - Datacenters
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    delete:
      tags:
        - Nutanix - Datacenters
      parameters:
        - name: param
          in: path
          required: true
          description: the entity to retrieve
          type: string
      responses:
        200:
          description: Return the data with the specified id
    put:
      tags:
        - Nutanix - Datacenters
      description:
      parameters:
        - name: param
          in: path
          required: true
          type: string
        - name: body
          in: body
          type: string
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/NutanixDatacenter"
      responses:
        200:
          description: Returns data
  /notifications/resolve/bulkupdate:
    post:
      tags:
        - Base
      description: Resolve
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/notificationsResolve"
      responses:
        200:
          description: Returns Service Request
  /base/assets/product/update:
    post:
      tags:
        - Base
      description: Update a product
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: Returns all examples
  /monitoring/ssl/detailupdate:
    post:
      tags:
        - Monitoring
      description: Update
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/MonitoringSSLDtl"
      responses:
        200:
          description: Returns MonitoringSSLDtl

  /base/alertconfigs/getfilterinstance:
    post:
      tags:
        - Base
      description: instance filter
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            type: object
            properties:
              _customer:
                type: number
              _account:
                type: number
              _tag:
                type: number
              tagvalue:
                type: string
      responses:
        200:
          description: Returns data

  /base/webhook/{provider}:
    post:
      tags:
        - Base
      description: This endpoint is for testing purposes only.
      parameters:
        - name: provider
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              body:
                type: string
      responses:
        200:
          description: Returns a log message

  /cicd/workflow/create:
    post:
      tags:
        - workflow
      description: This endpoint is for testing purposes only.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: number

      responses:
        200:
          description: Returns a log message

  /cicd/releaseconfig/trigger:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: triggerWorkflow
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              configId:
                type: number
      responses:
        200:
          description: Returns parameters

  /cicd/releaseconfig:
    get:
      tags:
        - CICD
      description: Releases List
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: tenantid
          in: query
          description: tenantid
          required: true
          schema:
            $ref: "#/definitions/releaseworkflow"
      responses:
        200:
          description: Returns releases

  /cicd/releaseworkflow:
    get:
      tags:
        - CICD
      description: Releases List
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: tenantid
          in: query
          description:
          required: true
          schema:
            $ref: "#/definitions/release"
      responses:
        200:
          description: Returns releases
        404:
          description: No record Found

  /cicd/pipelinetemplate/create:
    post:
      tags:
        - CICD
      description: PipelineTemplate
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/PipelineTemplate"
      responses:
        200:
          description: saved successfully

  /cicd/releaseconfig/create:
    post:
      tags:
        - CICD
      description: Create a release
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/releaseworkflow"
      responses:
        200:
          description: Successfully created

  /cicd/pipelinetemplate:
    get:
      tags:
        - CICD
      description: Pipeline Template List
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            $ref: "#/definitions/pipelinelisttemplate"
      responses:
        200:
          description: Returns Pipeline Template

  /cicd/releaseworkflow/cancel:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: cancelWorkflow
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: number
              releaseProcessHeaderId:
                type: number
      responses:
        200:
          description: Returns parameters

  /cicd/pipelinetemplate/setupmaster:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: PipelineTemplate
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/pipelinesetupmaster"
      responses:
        200:
          description: setup master list

  /cicd/releaseworkflow/rerun:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: reRun Workflow
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: number
              releaseProcessHeaderId:
                type: number
      responses:
        200:
          description: Returns parameters
  /cicd/pipelinetemplate/{id}:
    get:
      tags:
        - CICD
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found
  /cicd/releaseworkflow/log/{id}:
    get:
      tags:
        - CICD
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive log detail
          type: integer
      responses:
        200:
          description: Return the dat with the specified id
        404:
          description: No record Found

  /cicd/releaseworkflow/{id}:
    get:
      tags:
        - CICD
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive workflow detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /cicd/releaseconfig/{id}:
    get:
      tags:
        - CICD
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/releaseconfig/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/releaseworkflow"
      responses:
        200:
          description: Returns all examples

  /cicd/releaseconfig/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details
  /cicd/pipelinetemplate/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/PipelineTemplate"
      responses:
        200:
          description: Returns all examples
  /cicd/provider/sync/{id}:
    post:
      tags:
        - CICD
      description: Sync repo
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: number
              repoName:
                type: string
              createdBy:
                type: string
      responses:
        200:
          description: Returns all examples

  /cicd/provider/create:
    post:
      tags:
        - CICD
      description: Setup-Provider
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setupprovider"
      responses:
        200:
          description: saved successfully

  /cicd/provider:
    get:
      tags:
        - CICD
      description: setup master provider list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns provider list

  /cicd/provider/{id}:
    get:
      tags:
        - CICD
      description: setup master provider list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/provider/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setupprovider"
      responses:
        200:
          description: Returns all examples

  /cicd/dashboard/count:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: Dashboard
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/cicddashboard"
      responses:
        200:
          description: Dashboard list count

  /cicd/provider/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details

  /cicd/containerregistry:
    get:
      tags:
        - CICD
      description: setup master container-registry list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns container-registry list

  /cicd/testtool:
    get:
      tags:
        - CICD
      description: setup master tests list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns tests list

  /cicd/containerregistry/create:
    post:
      tags:
        - CICD
      description: Setup-containerregistry
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setupcontainerregistry"
      responses:
        200:
          description: saved successfully

  /cicd/containerregistry/{id}:
    get:
      tags:
        - CICD
      description: setup master containerregistry list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/containerregistry/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setupcontainerregistry"
      responses:
        200:
          description: Returns all examples

  /cicd/containerregistry/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details

  /cicd/testtool/create:
    post:
      tags:
        - CICD
      description: Setup- testing tools
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setuptest"
      responses:
        200:
          description: saved successfully

  /cicd/testtool/{id}:
    get:
      tags:
        - CICD
      description: setup master testing tools list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/testtool/update/{id}:
    post:
      tags:
        - CICD
      description: Update 
      parameters:
        - name: id
          in: path
          description: 
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setuptest"
      responses:
        200:
          description: Returns all examples

  /cicd/testtool/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details
    
  /cicd/environments:
    get:
      tags:
        - CICD
      description: setup master environments list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns environments list

  /cicd/dashboard/pipelinestatus:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: Dashboard
      parameters:
        - name: where
          in: query
          description:
          required: false
          schema:
            $ref: "#/definitions/pipelinestatus"
      responses:
        200:
          description: Dashboard list count

  /cicd/environments/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details

  /cicd/environments/{id}:
    get:
      tags:
        - CICD
      description: setup master environments tools list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/environments/create:
    post:
      tags:
        - CICD
      description: Setup- testing tools
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setupenviroments"
      responses:
        200:
          description: saved successfully

  /cicd/environments/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setupenviroments"
      responses:
        200:
          description: Returns all examples

  /cicd/dashboard/pipelinestatusdaily:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - CICD
      description: Dashboard
      parameters:
        - name: where
          in: query
          description:
          required: false
          schema:
            $ref: "#/definitions/pipelinestatusdaily"
      responses:
        200:
          description: Returns all examples

  /cicd/customvariable/create:
    post:
      tags:
        - CICD
      description: Setup - customvariable
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setupcustomvariable"
      responses:
        200:
          description: saved successfully

  /cicd/customvariable:
    get:
      tags:
        - CICD
      description: setup master customvariable list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns customvariable list

  /cicd/customvariable/{id}:
    get:
      tags:
        - CICD
      description: setup master environments customvariable list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/customvariable/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete events
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details

  /cicd/customvariable/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setupcustomvariable"
      responses:
        200:
          description: Returns all examples

  /cicd/provider/runner:
    get:
      tags:
        - CICD
      description: setup master provider list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns provider list

  /cicd/build:
    get:
      tags:
        - CICD
      description: setup master build list
      parameters:
        - name: where
          in: query
          description:
          required: false
      responses:
        200:
          description: Returns build list

  /cicd/build/delete/{id}:
    delete:
      tags:
        - CICD
      description: Delete build
      parameters:
        - name: id
          in: path
          description: Id of the record
          required: true
      responses:
        200:
          description: Returns deleted record details

  /cicd/build/{id}:
    get:
      tags:
        - CICD
      description: setup master build list
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id

  /cicd/build/create:
    post:
      tags:
        - CICD
      description: Setup-Build
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/setupbuild"
      responses:
        200:
          description: saved successfully

  /cicd/build/update/{id}:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/setupbuild"
      responses:
        200:
          description: Returns all examples

  /base/orch/webhook:
    post:
      tags:
        - Base
      description: This endpoint is used emmit the orchestration.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              body:
                type: string
      responses:
        200:
          description: Returns a log message

  /base/manualapproval/webhook:
    post:
      tags:
        - Base
      description: This endpoint is used emmit the manual approval.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              body:
                type: string
      responses:
        200:
          description: Returns a log message

  /cicd/releaseconfig/orchestration:
    post:
      tags:
        - CICD
      description: orchestration
      parameters:
        - name: body
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/orchestrationApproval"
      responses:
        200:
          description: Successfully created

  /cicd/releaseconfig/approval:
    post:
      tags:
        - CICD
      description: workflow approval
      parameters:
        - name: body
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/approval"
      responses:
        200:
          description: Successfully triggered.

  /base/history/create:
    post:
      tags:
        - Base
      description: Create a History
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: Returns data

  /base/history/{id}:
    get:
      tags:
        - Base
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /base/history/update:
    post:
      tags:
        - Base
      description: Update the History
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: Returns updated data

  /base/history/list:
    post:
      tags:
        - Base
      description: List all history
      parameters:
        - name: where
          in: body
          description:
          required: false
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: Returns History

  /base/commentdoc/upload:
    post:
      tags:
        - Documents
      description: Create a documents
      consumes:
        - multipart/form-data
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        200:
          description: Returns documents
  /tenants/tenantsettings/create:
    post:
      tags:
        - Tenant Settings
      description: Create a user
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TenantSettings"
      responses:
        200:
          description: Returns all examples

  /tenants/tenantsettings/update:
    post:
      tags:
        - Tenant Settings
      description: Update the request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TenantSettings"
      responses:
        200:
          description: Returns data

  /tenants/tenantsettings/{id}:
    get:
      tags:
        - Tenant Settings
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found
  /tenants/tenantsettings/list:
    post:
      tags:
        - Tenant Settings
      description: List all Tenant Settings
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/TenantSettings"
      responses:
        200:
          description: Returns settings list

  /tenants/tenantlicenses/list:
    post:
      tags:
        - Tenant License
      description: List all Tenant Settings
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/TenantLicense"
      responses:
        200:
          description: Returns license list

  /tenants/tenantlicenses/{id}:
    get:
      tags:
        - Tenant License
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found
  /tenants/tenantlicenses/create:
    post:
      tags:
        - Tenant License
      description: Create a user
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TenantLicense"
      responses:
        200:
          description: Returns all examples

  /tenants/tenantlicenses/update:
    post:
      tags:
        - Tenant License
      description: Update the request
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/TenantLicense"
      responses:
        200:
          description: Returns data

  /base/template/create:
    post:
      tags:
        - Tenant
      description: Create a template
      parameters:
        - name: body
          in: body
          description: create template
          required: true
          schema:
            $ref: "#/definitions/template"
      responses:
        200:
          description: Returns data

  /base/template/{id}:
    get:
      tags:
        - Tenant
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the data with the specified id
        404:
          description: No record Found

  /base/template/update:
    post:
      tags:
        - Tenant
      description: Update a template
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/template"
      responses:
        200:
          description: Returns awszone

  /base/template/list:
    post:
      tags:
        - Tenant
      description: List all template
      parameters:
        - name: limit
          in: query
          description: Limit
          required: false
        - name: offset
          in: query
          description: offset
          required: false
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/template"
      responses:
        200:
          description: Returns template list

  /base/watchlist/list:
    post:
      tags:
        - Base
      description: List all Notification Transaction Watch List
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/watchlist"
      responses:
        200:
          description: Returns watchlist

  /base/commentdoc/download:
    post:
      tags:
        - Documents
      description: download
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/CommentsDoc"
      responses:
        200:
          description: Returns service request actions list

  /cicd/resourcemapping:
    post:
      tags:
        - CICD
      description: Map resources
      parameters:
        - name: where
          in: body
          description: number of items to skip
          required: true
          schema:
            $ref: "#/definitions/Resourcemapping"
      responses:
        200:
          description: Returns Resourcemapping

  /cicd/pipelinetemplate/nodedetail/create:
    post:
      tags:
        - CICD
      description: create
      parameters:
        - name: where
          in: body
          description:
          required: true
          schema:
            $ref: "#/definitions/TemplateConfig"
      responses:
        200:
          description: saved successfully

  /cicd/pipelinetemplate/nodedetail/update:
    post:
      tags:
        - CICD
      description: Update
      parameters:
        - name: id
          in: path
          description:
          required: true
        - name: where
          in: body
          required: true
          schema:
            $ref: "#/definitions/TemplateConfig"
      responses:
        200:
          description: Returns all examples

  /cicd/pipelinetemplate/nodedetail/{id}:
    get:
      tags:
        - CICD
      description:
      parameters:
        - name: id
          in: path
          required: true
          description: The retrive detail
          type: integer
      responses:
        200:
          description: Return the data with the specified id