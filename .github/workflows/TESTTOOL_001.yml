        name: TESTTOOL_001

        on:
          workflow_dispatch:
          push:
           paths-ignore:
             - '.github/workflows/**'
             - '**/Dockerfile'
             - '**/sonar-project.properties'
  

        jobs:
          build:
           name: GITHUB
           runs-on: ubuntu-latest
           steps:
                - name: Check out the repo
                  uses: actions/checkout@v3  
            

        #---------------- DOCKER
          DOCKERHUB:
           needs: [build]
           runs-on: ubuntu-latest
           steps:
             - name: Checkout code
               uses: actions/checkout@v2
             - name: Set up Docker Buildx
               uses: docker/setup-buildx-action@v3
             - name: Login to Docker Hub
               uses: docker/login-action@v2
               with:
                 username: devtester2025
                 password: dckr_pat_W9cx0PiYuv_5BgW54h7oBv1viCU
             - name: Build and push
               uses: docker/build-push-action@v5
               with:
                  push: true
                  tags: devtester2025/undefined:main
            
#------------------JUNIT
          JUNIT:
           needs: [DOCKERHUB]
           runs-on: ubuntu-latest
           steps:
            - name: Empty Step
              run: echo "This is an JUNIT job"
#------------------SELENIUM
          SELENIUM:
           needs: [JUNIT]
           runs-on: ubuntu-latest
           steps:
            - name: Empty Step
              run: echo "This is an SELENIUM job"
#------------------JMETER
          JMETER:
           needs: [SELENIUM]
           runs-on: ubuntu-latest
           steps:
            - name: Empty Step
              run: echo "This is an JMETER job"

    #---------------- SONARQUBE
          SONARQUBE:
            needs: [JMETER]
            runs-on: ubuntu-latest
            steps:
              - uses: actions/checkout@master
              - name: SonarQube Scan
                uses: sonarsource/sonarqube-scan-action@master
            env:
                SONAR_TOKEN: sqp_e3502cd244a813520d59a3b4a9ce500400701144
                SONAR_HOST_URL: http://13.51.7.24:9000/
 
    #---------------- ORCHESTRATION
          ORCHESTRATION:
            needs: [SONARQUBE]
            runs-on: ubuntu-latest
            permissions:
               issues: write
            steps:
               - uses: trstringer/manual-approval@v1
                 with:
                   secret: ${{ secrets.GITHUB_TOKEN }}
                   approvers: DevTester2025
                   issue-title: "Orchestration"
                   issue-body: "run_id: ${{ github.run_id }}"
 
    #---------------- APPROVAL_WORKFLOW
          APPROVAL_WORKFLOW:
            needs: [ORCHESTRATION]
            runs-on: ubuntu-latest
            permissions:
               issues: write
            steps:
               - uses: trstringer/manual-approval@v1
                 with:
                   secret: ${{ secrets.GITHUB_TOKEN }}
                   approvers: DevTester2025
                   issue-title: "Manual Approval"
                   issue-body: "run_id: ${{ github.run_id }}"

      #---------------- VIRTUAL_MACHINE
          VIRTUAL_MACHINE:
            runs-on: ubuntu-latest
            needs: [APPROVAL_WORKFLOW]
            steps:
               - name: Checkout code
                 uses: actions/checkout@v3
               - name: Deploy to Linux Server
                 run: |
                     sshpass -p CmCICD#2024# ssh -o StrictHostKeyChecking=no ubuntu@13.51.7.24 "sudo docker pull devtester2025/undefined:main && sudo docker run --rm -p undefined:undefined -d devtester2025/undefined:main"

    #---------------- BUILD_SCRIPT
          BUILD_SCRIPT:
            needs: [VIRTUAL_MACHINE]
            runs-on: ubuntu-latest
            steps:
               - name: Run script on the VM
                 run: |
                   sshpass -p "root" ssh -o StrictHostKeyChecking=no test@192.168.1.56 <<EOF
                              cd my-java-project
                              git init
                              git add .
                              git commit -m "Initial commit"
                              git branch -M main
                              git remote add origin https://github.com/yourusername/my-java-project.git
                              git push -u  origin main
                               
                   EOF